<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Xiangcheng Kuo Blog</title>
        <link>https://www.geek66.cyou/zh-CN/blog</link>
        <description>Xiangcheng Kuo Blog</description>
        <lastBuildDate>Tue, 15 Jul 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <item>
            <title><![CDATA[解决 Spring Boot 3.5.0 后 Jasypt 无法解析环境变量中的加密字符串问题]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0</guid>
            <pubDate>Tue, 15 Jul 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[当 Spring Boot 项目升级到 3.5.0 及更高版本后，使用 jasypt-spring-boot-starter]]></description>
            <content:encoded><![CDATA[<p>当 Spring Boot 项目升级到 3.5.0 及更高版本后，使用 <code>jasypt-spring-boot-starter</code>
会遇到一个问题：应用程序无法正确解析环境变量中配置的加密字符串。具体表现为，在应用程序运行期间，读取到的配置值仍然是加密后的字符串（例如
ENC(加密字符串)），而非解密后的原始值。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题示例">问题示例<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E9%97%AE%E9%A2%98%E7%A4%BA%E4%BE%8B" class="hash-link" aria-label="问题示例的直接链接" title="问题示例的直接链接">​</a></h2>
<p>考虑以下 Spring Boot 配置属性类：</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@ConfigurationProperties</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">prefix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"test"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">TestProperties</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">setPassword</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">password </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> password</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>并在环境变量中配置加密后的密码：</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">TEST_PASSWORD=ENC(加密字符串) # 假设其原始值为 password</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>预期行为：</strong> 在 Spring Boot 3.5.0 之前的版本中，<code>TestProperties.password</code> 的值会是 password。</p>
<p><strong>实际行为</strong> (Spring Boot 3.5.0 及以上)： <code>TestProperties.password</code> 的值仍然是 ENC(加密字符串)。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="原因分析">原因分析<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90" class="hash-link" aria-label="原因分析的直接链接" title="原因分析的直接链接">​</a></h2>
<p>此问题源于 Spring Boot 3.5.0 版本中 <code>SpringConfigurationPropertySource</code> 类的内部变化。</p>
<p>自 Spring Boot 3.5.0 起，<code>SpringConfigurationPropertySource</code> 对其内部代理的 <code>PropertySource</code> 进行了检查。如果代理的
<code>PropertySource</code> 类型为 <code>SystemEnvironmentPropertySource</code>（<code>SystemEnvironmentPropertySource</code> 是对操作系统环境变量的抽象），Spring
Boot 会直接调用其 <code>getSource()</code> 方法来获取原始的 <code>Map&lt;String, String&gt;</code>，而不再通过 <code>getProperty()</code> 方法逐个获取属性。</p>
<p>然而，<code>jasypt-spring-boot-starter</code> 在设计之初，其加密代理逻辑主要集中在对 <code>getProperty()</code> 方法的封装和解析上，而没有对
<code>getSource()</code> 方法进行相应的代理或处理。这种“直通”（<code>pass-through</code>）场景的遗漏，导致 jasypt 无法在 Spring Boot 3.5.0
及以上版本中正确拦截和解密从环境变量中获取的加密字符串。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spring-boot为什么要这样修改">spring-boot为什么要这样修改<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#spring-boot%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%BF%99%E6%A0%B7%E4%BF%AE%E6%94%B9" class="hash-link" aria-label="spring-boot为什么要这样修改的直接链接" title="spring-boot为什么要这样修改的直接链接">​</a></h2>
<p>spring-boot为了提高性能，通常来说，Environment在程序启动后是不会变化的，因此其值是不会变化的，因此<code>spring-boot</code>
的维护者为了减少不必要的方法调用直接调用<code>getSource()</code>方法获取原始的<code>Map&lt;String, String&gt;</code>，而不是每次都调用<code>getProperty()</code>
方法。</p>
<p>但是对于jasypt来说，其需要解析环境变量中的加密字符串，在设计之初，遗漏了这种pass-through场景，因此导致了上述问题的发生。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>鉴于 <code>jasypt-spring-boot-starter</code> 项目已有一段时间未进行更新，通过创建 Issue 可能难以获得及时响应。从长远来看，迁移到其他活跃维护的加密库是最佳的解决方案。</p>
<p>然而，为了提供一个快速的临时 <code>workaround</code>，我们可以通过自定义 <code>PropertySource</code> 包装器来适配 Spring Boot 的新行为。</p>
<p>临时 Workaround
将以下 Java 代码复制到 Spring Boot 应用项目中。请注意：此代码不能放置在自定义的公共库中，否则类加载器可能不会优先加载我们覆盖的类，导致
<code>workaround</code> 不生效。</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">package</span><span class="token plain"> </span><span class="token namespace" style="opacity:0.7">com</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">ulisesbocchio</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">jasyptspringboot</span><span class="token namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token namespace" style="opacity:0.7">wrapper</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">ulisesbocchio</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">jasyptspringboot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">EncryptablePropertyFilter</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">ulisesbocchio</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">jasyptspringboot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">EncryptablePropertyResolver</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">ulisesbocchio</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">jasyptspringboot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">EncryptablePropertySource</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">com</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">ulisesbocchio</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">jasyptspringboot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">caching</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">CachingDelegateEncryptablePropertySource</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Collections</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">HashMap</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">jetbrains</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">annotations</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">NotNull</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">springframework</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">boot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">origin</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Origin</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">springframework</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">boot</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">origin</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">SystemEnvironmentOrigin</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">springframework</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">core</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">env</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">PropertySource</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">org</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">springframework</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">core</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">env</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">SystemEnvironmentPropertySource</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token import namespace" style="opacity:0.7">java</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import namespace" style="opacity:0.7">util</span><span class="token import namespace punctuation" style="opacity:0.7;color:#393A34">.</span><span class="token import class-name">Map</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * &lt;p&gt;EncryptableSystemEnvironmentPropertySourceWrapper class.&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @author Tomas Tulka (@ttulka)</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> * @version $Id: $Id</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">EncryptableSystemEnvironmentPropertySourceWrapper</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">SystemEnvironmentPropertySource</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">implements</span><span class="token plain"> </span><span class="token class-name">EncryptablePropertySource</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">final</span><span class="token plain"> </span><span class="token class-name">CachingDelegateEncryptablePropertySource</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> encryptableDelegate</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> newSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HashMap</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/**</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * &lt;p&gt;Constructor for EncryptableSystemEnvironmentPropertySourceWrapper.&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 *</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * @param delegate a {@link org.springframework.core.env.SystemEnvironmentPropertySource} object</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * @param resolver a {@link com.ulisesbocchio.jasyptspringboot.EncryptablePropertyResolver} object</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * @param filter a {@link com.ulisesbocchio.jasyptspringboot.EncryptablePropertyFilter} object</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">EncryptableSystemEnvironmentPropertySourceWrapper</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">SystemEnvironmentPropertySource</span><span class="token plain"> delegate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">EncryptablePropertyResolver</span><span class="token plain"> resolver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">EncryptablePropertyFilter</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delegate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> delegate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getSource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		encryptableDelegate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">CachingDelegateEncryptablePropertySource</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">delegate</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> resolver</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> filter</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// see fastone/cce-project#14093</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		delegate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getSource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">forEach</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value </span><span class="token keyword" style="color:#00009f">instanceof</span><span class="token plain"> </span><span class="token class-name">String</span><span class="token plain"> s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				newSource</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> resolver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">resolvePropertyValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">s</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		newSource </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">unmodifiableMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">newSource</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@NotNull</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getSource</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">newSource</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/** {@inheritDoc} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> encryptableDelegate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/** {@inheritDoc} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">PropertySource</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getDelegate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> encryptableDelegate</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/** {@inheritDoc} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Origin</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getOrigin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Origin</span><span class="token plain"> fromSuper </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">EncryptablePropertySource</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getOrigin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">fromSuper </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> fromSuper</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">String</span><span class="token plain"> property </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolvePropertyName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">key</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">containsProperty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">property</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">SystemEnvironmentOrigin</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">property</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在上述代码中，我们重写了 <code>getSource()</code> 方法，确保它返回的是一个已经过 jasypt 解析器处理（即解密）后的 <code>Map&lt;String, Object&gt;</code>
对象。这样，当 Spring Boot 直接调用 <code>getSource()</code> 时，也能获取到解密后的值。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="相关原理介绍">相关原理介绍<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E7%9B%B8%E5%85%B3%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="相关原理介绍的直接链接" title="相关原理介绍的直接链接">​</a></h2>
<p>为了更好地理解此问题和解决方案，我们简要介绍 Spring 和 <code>jasypt-spring-boot-starter</code> 中的相关概念和机制。</p>
<p><strong>PropertySource</strong></p>
<p><code>PropertySource</code> 是 Spring 框架中一个核心接口，它抽象了各种不同的配置来源，如<code>系统环境变量</code>、<code>JVM 系统属性</code>、外部配置文件（如
<code>application.properties</code>、<code>application.yml</code>）等。
其常见的实现类包括：</p>
<ul>
<li><code>SystemEnvironmentPropertySource</code>：用于封装操作系统环境变量。</li>
<li><code>PropertiesPropertySource</code>：用于封装 java.util.Properties 对象。</li>
</ul>
<p>这种设计提高了 Spring 框架的灵活性和扩展性，使得配置来源可以灵活地扩展和替换。</p>
<p><strong>jasypt-spring-boot-starter 如何封装 PropertySource</strong>
<code>jasypt-spring-boot-starter</code> 引入了“包装器”（<code>Wrapper</code>）机制。它通过继承 Spring 框架中常见的 <code>PropertySource</code> 实现类，完成了对原始
<code>PropertySource</code> 的封装。
例如：</p>
<ul>
<li><code>EncryptableSystemEnvironmentPropertySourceWrapper</code>：用于包装 SystemEnvironmentPropertySource。</li>
<li><code>EncryptableEnumerablePropertySourceWrapper</code>：用于包装 EnumerablePropertySource（一个可以枚举所有属性的 PropertySource）。</li>
</ul>
<p><strong>jasypt-spring-boot-starter 如何完成对原始 PropertySource 的替换</strong></p>
<p>Spring Boot 提供了自动配置（<code>factories</code>）的机制，允许第三方库自定义配置类。spring-boot 会在应用程序启动时读取到这些相关配置类，而无需用户手动导入。
<code>jasypt-spring-boot-starter</code> 的配置类中引入了 <code>EncryptablePropertySourceBeanFactoryPostProcessor</code> 类。它是
<code>BeanFactoryPostProcessor</code> 的实现类，在 Spring 容器初始化阶段（Bean 定义加载后，Bean 实例化前）被调用。</p>
<p><code>EncryptablePropertySourceBeanFactoryPostProcessor</code> 会拦截并修改 <code>Environment</code> 中的原始 <code>PropertySource</code> 实例，将其替换为封装后的
<code>Wrapper</code> 实现（例如 <code>EncryptableSystemEnvironmentPropertySourceWrapper</code>）。</p>
<p>至此，原始的 PropertySource 就被封装后的 Wrapper 实现了替换，从而 jasypt 可以介入属性的读取过程。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p><code>jasypt-spring-boot-starter</code> 在 Spring Boot 3.5.0 版本中遇到了兼容性问题，主要是因为 Spring Boot 对
SystemEnvironmentPropertySource 的内部处理方式发生了变化。为了解决这个问题，可以通过自定义
<code>EncryptableSystemEnvironmentPropertySourceWrapper</code> 类来适配新的实现方式。</p>
<blockquote>
<p>值得注意的是，虽然这种方法可以作为临时 workaround 解决当前问题，但从长远来看，考虑到项目的可维护性和安全性，建议寻找替代的解决方案（例如，将敏感配置通过更安全的密钥管理服务注入，或者使用
Spring Cloud Config 的解密功能）。</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="相关链接">相关链接<a href="https://www.geek66.cyou/zh-CN/blog/2025/07/15/jasypt-spring-boot-starter-env-var-decryption-fix-spring-boot-3-5-0#%E7%9B%B8%E5%85%B3%E9%93%BE%E6%8E%A5" class="hash-link" aria-label="相关链接的直接链接" title="相关链接的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/ulisesbocchio/jasypt-spring-boot" target="_blank" rel="noopener noreferrer">jasypt-spring-boot-starter GitHub 仓库</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/d9d206a761d49aa216cd114d7d897326432b14d4" target="_blank" rel="noopener noreferrer">Spring Boot SpringConfigurationPropertySource 相关的 Git 提交记录</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/issues/44862" target="_blank" rel="noopener noreferrer">Spring Boot 相关 Issue</a></li>
<li><a href="https://github.com/spring-projects/spring-boot/blob/main/core/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.java" target="_blank" rel="noopener noreferrer">SpringConfigurationPropertySource.java 源码</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>java</category>
            <category>spring-boot</category>
            <category>jasypt</category>
            <category>jasypt-spring-boot-starter</category>
        </item>
        <item>
            <title><![CDATA[将Apache Guacamole从1.5.5升级到1.6.0版本后SSH终端粘贴中文首个字符不显示问题排查与解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix</guid>
            <pubDate>Mon, 30 Jun 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[在将Apache Guacamole从1.5.5升级到1.6.0版本后，遇到了一个的问题：]]></description>
            <content:encoded><![CDATA[<p>在将<code>Apache Guacamole</code>从<code>1.5.5</code>升级到<code>1.6.0</code>版本后，遇到了一个的问题：
在使用SSH终端时，粘贴中文文本的第一个字符无法正常显示。</p>
<p>从本地复制一段以中文字符开头的文本（例如：“我是人”）并粘贴到Guacamole终端中时，屏幕上显示的并非完整的<code>我是人</code>，而是<code>是人</code>，开头的<code>我</code>字不翼而飞。</p>
<p><img decoding="async" loading="lazy" alt="cfb396cc38020b333834ea53436e0ba7116734666aeeaa7766b031579fe28de0.png" src="https://www.geek66.cyou/zh-CN/assets/images/cfb396cc38020b333834ea53436e0ba7116734666aeeaa7766b031579fe28de0-5425f8bc261f6b98f450f31cf5976933.png" width="1056" height="1119" class="img_ev3q"></p>
<p>经过一番排查和测试，最终找到了问题的根源并给出了解决方案。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="日志信息">日志信息<a href="https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix#%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF" class="hash-link" aria-label="日志信息的直接链接" title="日志信息的直接链接">​</a></h2>
<p>从<code>guacd</code>内部的渲染流程入手，开启了详细的<code>Debug</code>日志。
当粘贴“我”字时，捕获到以下核心日志片段：</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    Rendering char: row=39, col=26, codepoint=0x6211 ('我'), width=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    set_columns: Primary set for row=39, cols=[26,27], char=0x6211('我'), width=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: row=39, input_start_col=26, input_end_col=27, char_codepoint=0x6211 ('我'), char_width=2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Starting loop to set columns from 26 to 27 (char_width=2).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Processing col 26, current_op_type=0 (GUAC_CHAR_COPY=1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Set op for col 26: type=2, char_codepoint=0x6211.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Marking unflushed_set for row 39.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    set_columns: Cursor detected at row=39, col=26. Character width is 2.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    set_columns: Redrawing cursor char. Original visible_cursor_col=26. Adjusted redraw range: [26,27].</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: row=39, input_start_col=26, input_end_col=26, char_codepoint=0x6211 ('我'), char_width=2  # &lt;-- 第一次异常覆盖点</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Starting loop to set columns from 26 to 26 (char_width=2).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Processing col 26, current_op_type=2 (GUAC_CHAR_COPY=1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Set op for col 26: type=2, char_codepoint=0x6211.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Marking unflushed_set for row 39.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># ... (其他字符正常处理) ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: row=39, input_start_col=26, input_end_col=26, char_codepoint=0x20 (' '), char_width=1 # &lt;-- 最终致命覆盖</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Starting loop to set columns from 26 to 26 (char_width=1).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Processing col 26, current_op_type=2 (GUAC_CHAR_COPY=1)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Set op for col 26: type=2, char_codepoint=0x20.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">guacd[...]: DEBUG:    display_set_columns: Marking unflushed_set for row 39.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以上日志揭示的核心问题链条：</p>
<p><code>我</code>字初次设置是正确的： guac_terminal_set 初次调用set_columns时，传入的范围 [26,27] (宽度为2) 是符合中文显示需求的。
光标重绘的“副作用”： 当光标恰好位于这个字符的起始列 (col=26) 时，set_columns 内部的光标重绘逻辑被触发。
然而，此处再次调用 display_set_columns 时，传入的 input_end_col=26 变成了单列范围，导致对双宽字符的不完整覆盖。</p>
<ul>
<li>在所有字符处理完毕后，guac_terminal_commit_cursor 或相关清理逻辑介入，对 col=26 这个位置执行了一次额外的“清空”操作（将该位置设置为 0x20 空格）。这彻底抹去了“我”字在屏幕上的显示痕迹。</li>
<li>其他中文字符（如“是”、“人”）之所以能正常显示，是因为它们没有像“我”字那样，在渲染过程中被多次、不完整地覆盖，也没有被后续的误清理操作殃及。</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<blockquote>
<p>双宽字符操作的“错位”， 问题的根本在于 Guacamole 终端在处理双宽度字符（如中文，占用两列显示空间）时，其内部状态管理和重绘机制中的“错位写入”和“不完全覆盖”缺陷。</p>
</blockquote>
<ul>
<li>缺陷一： guac_terminal_set_columns 函数中的光标重绘逻辑，在处理与光标重叠的双宽度字符时，未能正确地将完整的两列范围传递给底层显示排队。它错误地只更新了字符的第一列，导致显示缓冲区中该字符的状态不完整。</li>
<li>缺陷二： guac_terminal_commit_cursor 函数（负责光标的清除与绘制）在执行相关操作时，也存在类似的问题。它最终将不完整的双宽度字符误认为“脏”或“空闲”，从而使用单列的空格或空字符指令彻底覆盖了第一个中文字符的显示。</li>
</ul>
<p>这些缺陷导致了显示缓冲区中字符状态的混淆和相互覆盖，最终表现为中文首字无法正常显示。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>问题定位到 src/terminal/terminal.c 文件中的<code>guac_terminal_set_columns</code>函数。我们需要修正其内部光标重绘逻辑，确保在处理双宽度字符时，始终以其完整的显示宽度来更新显示缓冲区。</p>
<p>修改后的<code>guac_terminal_set_columns</code>代码：</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/terminal/terminal.c</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">guac_terminal_set_columns</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">guac_terminal</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> terminal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> start_column</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> end_column</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> guac_terminal_char</span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// Primary set for the character</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 第一次将字符写入缓冲区，确保是完整两列</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">__guac_terminal_set_columns</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">terminal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> start_column</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> end_column</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">/* If visible cursor in current row, preserve state */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 如果光标在当前行，并且其位置与当前设置的字符区域重叠</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">row </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> terminal</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">visible_cursor_row</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> terminal</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">visible_cursor_col </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> start_column</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> terminal</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">visible_cursor_col </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> end_column</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        guac_terminal_char cursor_character </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">character</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        cursor_character</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">attributes</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cursor </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 【核心修复】计算实际需要重绘的起始列和结束列，以覆盖整个字符的宽度</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> cursor_redraw_start_col </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> terminal</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">visible_cursor_col</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> cursor_redraw_end_col </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> terminal</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">visible_cursor_col </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> character</span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain">width </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 确保重绘范围不会超出原始的设置范围 (安全边界)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cursor_redraw_start_col </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> start_column</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cursor_redraw_start_col </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> start_column</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">cursor_redraw_end_col </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> end_column</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            cursor_redraw_end_col </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> end_column</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// 重新提交字符，这次要确保带有光标属性的字符覆盖其完整的两列</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token function" style="color:#d73a49">__guac_terminal_set_columns</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">terminal</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> row</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    cursor_redraw_start_col</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    cursor_redraw_end_col</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                                    </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">cursor_character</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这段修改确保了所有对双宽度字符的<code>SET</code>操作（无论是初次放置还是光标重绘）都能够正确地处理其完整宽度。
消除了显示缓冲区中的不一致状态，避免了后续的错误覆盖。</p>
<p>经测试，中文首字渲染问题得以解决，字符能够正常显示。</p>
<p><img decoding="async" loading="lazy" alt="90a58c10166073ac640466ef4bee4a7ba4350970690cdf38a6a22c74d02240f8.png" src="https://www.geek66.cyou/zh-CN/assets/images/90a58c10166073ac640466ef4bee4a7ba4350970690cdf38a6a22c74d02240f8-94cef738025ff94220caac546277da5a.png" width="990" height="232" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2025/06/30/guacamole-terminal-chinese-rendering-issue-fix#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://issues.apache.org/jira/projects/GUACAMOLE/issues/GUACAMOLE-2091" target="_blank" rel="noopener noreferrer">Guacamole Issue</a></li>
<li><a href="https://github.com/apache/guacamole-server/pull/602" target="_blank" rel="noopener noreferrer">Github Pull Request</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>guacamole</category>
            <category>guacamole-server</category>
            <category>guacd</category>
            <category>ssh</category>
            <category>linux</category>
            <category>terminal</category>
            <category>rendering</category>
            <category>c</category>
        </item>
        <item>
            <title><![CDATA[创建VNC会话报错A VNC server is already running as :xxx]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx</guid>
            <pubDate>Wed, 18 Sep 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[在执行vncserver命令时, 出现以下错误提示:]]></description>
            <content:encoded><![CDATA[<p>在执行<code>vncserver</code>命令时, 出现以下错误提示:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vncserver -nolisten unix -listen tcp :1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>错误信息如下:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">A VNC server is already running as :1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该错误说明VNC会话已被占用.<br></p>
<p>如果无法正常访问VNC会话, 可能是会话出现问题. 请按照以下步骤进行故障排除.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="排查步骤">排查步骤<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%8E%92%E6%9F%A5%E6%AD%A5%E9%AA%A4" class="hash-link" aria-label="排查步骤的直接链接" title="排查步骤的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="检查残留进程">检查残留进程<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5%E6%AE%8B%E7%95%99%E8%BF%9B%E7%A8%8B" class="hash-link" aria-label="检查残留进程的直接链接" title="检查残留进程的直接链接">​</a></h3>
<p>使用以下命令检查是否有残留的进程:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 假设 display_number 为 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo ps -ef | grep Xtigervnc | grep :1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果有残留进程, 请将其杀死.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo kill -9 &lt;pid&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="检查进程残留文件">检查进程残留文件<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5%E8%BF%9B%E7%A8%8B%E6%AE%8B%E7%95%99%E6%96%87%E4%BB%B6" class="hash-link" aria-label="检查进程残留文件的直接链接" title="检查进程残留文件的直接链接">​</a></h3>
<p>一个VNC会话会创建以下文件. 如果这些文件存在, 则说明VNC会话可能处于异常状态, 需要清理.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/.X$n-lock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/.X11-unix/X$n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/spool/sockets/X11/$n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>假设 display_number 为 1, 那么文件为. <br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/.X1-lock</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/tmp/.X11-unix/X1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/usr/spool/sockets/X11/1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>请删除以上文件以解决问题.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo rm -rf /tmp/.X1-lock /tmp/.X11-unix/X1 /usr/spool/sockets/X11/1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="检查端口">检查端口<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5%E7%AB%AF%E5%8F%A3" class="hash-link" aria-label="检查端口的直接链接" title="检查端口的直接链接">​</a></h3>
<p>在<code>VNC</code>中, 每个<code>VNC</code>会话由两个主要组件组成:</p>
<ul>
<li><code>VNC Server</code>
<br><code>VNC服务器</code>, 处理<code>VNC客户端</code>的连接请求.<br></li>
<li><code>X Server</code>
<br><code>X11服务器</code>，负责管理显示和处理<code>X客户端</code>的请求.<br></li>
</ul>
<blockquote>
<p>默认情况下, <code>X Server</code>部分不会监听端口, 而是监听Unix域套接字, 如果在创建VNC会话时给定了<code>-nolisten unix -listen tcp</code>那么
<code>X Server</code>会监听端口
端口的计算规则如下: <br>
VNC Server 端口 = 5900 + display_number(例如 :1 对应端口 5901) <br>
X Server 端口 = 6000 + display_number(例如 :1 对应端口 6001)</p>
</blockquote>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="检查服务端口占用">检查服务端口占用<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8" class="hash-link" aria-label="检查服务端口占用的直接链接" title="检查服务端口占用的直接链接">​</a></h4>
<p>可以使用以下命令检查端口占用情况: <br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># 假设 display_number 为 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo lsof -iTCP:5901 -sTCP:LISTEN -P -n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sudo lsof -iTCP:6001 -sTCP:LISTEN -P -n</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>如果端口占用情况如下, 则说明存在残留进程.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo lsof -iTCP:5901 -sTCP:LISTEN -P -n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xxx 8552 admin   10u  IPv4  57576      0t0  TCP *:5901 (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xxx 8552 admin   11u  IPv6  57577      0t0  TCP *:5901 (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$ sudo lsof -iTCP:6001 -sTCP:LISTEN -P -n</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">COMMAND    PID  USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xxx 8552 admin    6u  IPv6  57567      0t0  TCP *:6001 (LISTEN)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xxx 8552 admin    7u  IPv4  57568      0t0  TCP *:6001 (LISTEN)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="检查ip_local_port_range配置的tcp客户端端口是否和vnc会话使用的端口重叠">检查ip_local_port_range配置的TCP客户端端口是否和VNC会话使用的端口重叠<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5ip_local_port_range%E9%85%8D%E7%BD%AE%E7%9A%84tcp%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%AB%AF%E5%8F%A3%E6%98%AF%E5%90%A6%E5%92%8Cvnc%E4%BC%9A%E8%AF%9D%E4%BD%BF%E7%94%A8%E7%9A%84%E7%AB%AF%E5%8F%A3%E9%87%8D%E5%8F%A0" class="hash-link" aria-label="检查ip_local_port_range配置的TCP客户端端口是否和VNC会话使用的端口重叠的直接链接" title="检查ip_local_port_range配置的TCP客户端端口是否和VNC会话使用的端口重叠的直接链接">​</a></h4>
<p><code>ip_local_port_range</code>是一个内核参数, 用于控制TCP客户端端口范围. <br></p>
<p>默认配置为<code>32768 60999</code>, 如果定制了此配置, 并且配置的范围恰好与VNC会话使用的端口重叠, 则可能会导致
<code>A VNC server is already running as :xxx</code>错误. <br></p>
<p>如果存在重叠, 修改<code>/etc/sysctl.conf</code>中的<code>net.ipv4.ip_local_port_range</code>, 避开VNC会话使用的端口范围. <br></p>
<p>示例如下: <br></p>
<div class="language-properties codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-properties codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">net.ipv4.ip_local_port_range=32768 60999</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>然后执行以下命令使配置生效:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sysctl -p</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="检查sshd配置中的x11displayoffset配置">检查sshd配置中的X11DisplayOffset配置<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E6%A3%80%E6%9F%A5sshd%E9%85%8D%E7%BD%AE%E4%B8%AD%E7%9A%84x11displayoffset%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="检查sshd配置中的X11DisplayOffset配置的直接链接" title="检查sshd配置中的X11DisplayOffset配置的直接链接">​</a></h4>
<p>在<code>sshd</code>配置中, 提供了<code>X11DisplayOffset</code>参数，用于指定<code>X11</code>转发的起始<code>display number</code>.</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">X11DisplayOffset</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         Specifies the first display number available for sshd(8)'s X11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         forwarding.  This prevents sshd from interfering with real X11</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">         servers.  The default is 10.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该配置位于<code>/etc/ssh/sshd_config</code>文件中, 默认值为<code>10</code>. <br></p>
<p>如果通过<code>SSH</code>客户端连接并启用了<code>X11 Forwarding</code>功能, 系统会从<code>10</code>开始分配 display number<code>.&lt;br/&gt; 这可能导致与VNC会话的</code>display number`(如 :10)产生冲突.<br></p>
<p>为避免这种冲突, 可以将<code>X11DisplayOffset</code>设置为较大的值, 例如:</p>
<div class="language-text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">X11DisplayOffset 200</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这样, 通过<code>X11 Forwarding</code>创建的第一个<code>display number</code>将从200开始, 有效避免与VNC会话的冲突.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<p>通过查看<code>vncserver</code>源码, 搜索错误信息<code>A VNC server is already running as</code>确认代码位置, 相关代码如下: <br></p>
<div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain"># Find display number.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">if ((@ARGV == 1) &amp;&amp; ($ARGV[0] =~ /^:(\d+)$/)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    $displayNumber = $1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (!&amp;CheckDisplayNumber($displayNumber)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	die "A VNC server is already running as :$displayNumber\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">} else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &amp;Usage();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>通过<code>CheckDisplayNumber</code>函数检查<code>display_number</code>是否可用, 如果不可用, 则会报错. <br></p>
<p>该函数的代码如下:<br></p>
<div class="language-perl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-perl codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># CheckDisplayNumber checks if the given display number is available.  A</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># display number n is taken if something is listening on the VNC server port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># (5900+n) or the X server port (6000+n).</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">sub CheckDisplayNumber</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my($n) = @_;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    use Socket;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my $x11_lock_path = "/tmp/.X$n-lock";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (-e $x11_lock_path) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        my($pid) = `cat "$x11_lock_path"` =~ /^\s*(\d+)\s*$/;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (defined($pid) &amp;&amp; kill(0, $pid)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # Lock is associated with valid PID.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my $rfb_port = 5900 + $n;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my $x11_port = 6000 + $n;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    for my $port ($rfb_port, $x11_port) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # Bind to port to confirm it is not in use.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        socket(S, PF_INET, SOCK_STREAM, 0) || die "$prog: socket failed: $!\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        setsockopt(S, SOL_SOCKET, SO_REUSEADDR, 1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (!bind(S, sockaddr_in($port, INADDR_ANY))) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # Port is in use.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            close(S);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        close(S);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    my $x11_unix_domain = "/tmp/.X11-unix/X$n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if (-e $x11_unix_domain) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        # Connect to UNIX domain socket to confirm it is not in use.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        socket(S, PF_UNIX, SOCK_STREAM, 0) || die "$prog: socket failed: $!\n";</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (connect(S, sockaddr_un($x11_unix_domain))) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            # UNIX domain socket is in use.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            close(S);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            return 0;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        close(S);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return 1;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>CheckDisplayNumber</code>函数检查<code>VNC Server</code>和<code>X Server</code>端口是否被占用. <br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2024/09/18/troubleshooting-a-vnc-server-is-already-running-as-xxx#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/TigerVNC/tigervnc/blob/master/unix/vncserver/vncserver.in#L96" target="_blank" rel="noopener noreferrer">vncserver源码</a></li>
<li><a href="https://mozillazg.com/2019/05/linux-what-net.ipv4.ip_local_port_range-effect-or-mean.html" target="_blank" rel="noopener noreferrer">net.ipv4.ip_local_port_range 的值究竟影响了啥</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>linux</category>
            <category>vnc</category>
            <category>tigervnc</category>
            <category>vncserver</category>
            <category>x11</category>
            <category>xorg</category>
            <category>xserver</category>
        </item>
        <item>
            <title><![CDATA[实现在X桌面环境中在不引入窗口管理器的情况下实现窗口的全屏]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager</guid>
            <pubDate>Thu, 18 Jul 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[最近需要完成一个Remote App的功能, 这个功能大致是这样的:]]></description>
            <content:encoded><![CDATA[<p>最近需要完成一个<code>Remote App</code>的功能, 这个功能大致是这样的:</p>
<blockquote>
<p>用户在浏览器中完成对桌面端程序的所有的操作, 例如<code>Ansys Fluent</code>, 整个过程用户不需要下载任何相关桌面程序, 所有软件都安装在远端的实例中, 平台根据用户选择的应用在系统的桌面资源池中分配一个虚拟桌面, 并在这个虚拟桌面中启动相关应用程序.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="技术实现">技术实现<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E6%8A%80%E6%9C%AF%E5%AE%9E%E7%8E%B0" class="hash-link" aria-label="技术实现的直接链接" title="技术实现的直接链接">​</a></h2>
<p>整个技术实现是在远程主机中通过<code>VNC</code>协议对外暴露远程桌面访问, 在<code>VNC</code>会话中单独启动一个桌面应用(不包含桌面管理器部分, 典型的例如<code>GNOME</code>, <code>KDE Plasma</code>), <code>VNC</code>会话会被基于<code>web-vnc</code>的前端组件嵌入到浏览器页面中, 例如<code>iframe</code>中, 然后<code>UI</code>侧将相关<code>iframe</code>封装为一个桌面窗口, 最终实现一个<code>Remote App</code>的功能.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题">问题<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E9%97%AE%E9%A2%98" class="hash-link" aria-label="问题的直接链接" title="问题的直接链接">​</a></h2>
<p>在整个实现过程中, 遇到的问题如标题所述, 需要解决在<code>VNC</code>会话中单独启动一个桌面应用并将其全屏化, 否则如果没有全屏会导致桌面周边为黑色的(因为应用没有完全覆盖整个<code>VNC</code>桌面), 这样用户的体验效果会不友好</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="思路">思路<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E6%80%9D%E8%B7%AF" class="hash-link" aria-label="思路的直接链接" title="思路的直接链接">​</a></h2>
<blockquote>
<p>需要注意的是, 应用自动全屏这个功能目前已经有窗口管理器能够实现, 典型的是<code>dwm</code>这类平铺式窗口管理器(<code>Tiling Window Manager</code>)
但是考虑到我们要解决的问题很简单, 而且不希望引入太多的依赖, 所以我们需要自己手动编写一个来用于实现应用全屏的脚本.</p>
</blockquote>
<p>简单的思路是调用<code>X</code>提供的工具获取到系统中的所有窗口,
获取到系统中的窗口后, 通过调整窗口大小的命令来实现窗口的全屏,</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取所有窗口">获取所有窗口<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%AA%97%E5%8F%A3" class="hash-link" aria-label="获取所有窗口的直接链接" title="获取所有窗口的直接链接">​</a></h2>
<p>首先的需要获取到目前系统中的活动窗口, 获取窗口可以通过<code>xwininfo</code>命令, 该命令用法如下</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xwininfo -root -children</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述命令将能够获取到所有窗口, 输出结果如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xwininfo: Window id: 0x51a (the root window) (has no name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Root window id: 0x51a (the root window) (has no name)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Parent window id: 0x0 (none)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     11 children:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x533 (has no name): ()  100x100+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0xa00000 "Chromium clipboard": ()  10x10+-100+-100  +-100+-100</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x200101 "StringDecoderBenchmark.java ? test.sh": ("jetbrains-idea" "jetbrains-idea")  2560x1440+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x200108 "sun-awt-X11-XIconWindow": ()  16x16+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x2000d7 "jetbrains-idea": ("jetbrains-idea" "jetbrains-idea")  1x1+1+1  +1+1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x800011 "java": ("java" "Java")  4x4+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x80000d "java": ("java" "Java")  200x200+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x800007 "java": ("java" "Java")  200x200+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x800003 "java": ("java" "Java")  200x200+0+0  +0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x800001 "java": ("java" "Java")  10x10+10+10  +10+10</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     0x400001 (has no name): ()  10x10+-20+-20  +-20+-20</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在上面的例子中, 整个<code>VNC</code>会话只启动了一个<code>Intellij IDEA</code>进程, 但是可以发现, 结果中出现了多个窗口, 这是因为我们平时看到的窗口可能是多个窗口的组合, 例如:</p>
<ul>
<li>设置选项的下拉框, 在<code>X</code>看来这是一个独立的窗口, 但是<code>IDEA</code>程序将这些窗口进行组合, 形成了最终的窗口</li>
<li>此外还有一些系统中的对话框, 这些也是属于<code>Window</code></li>
</ul>
<p>我们需要忽略这些窗口, 只获取到<code>IDEA</code>程序的主窗口, 所以这里的主要问题是如何获取到主窗口</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取主窗口">获取主窗口<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E8%8E%B7%E5%8F%96%E4%B8%BB%E7%AA%97%E5%8F%A3" class="hash-link" aria-label="获取主窗口的直接链接" title="获取主窗口的直接链接">​</a></h2>
<p>为了能够获取到主窗口, 在<code>Google</code>上搜索相关问题, 没有找到完整的解决方案, 在这种情况下, 我们只能自己自己查看窗口管理器的逻辑来探索解决方案.<br>
在之前的工作中, 我们使用过<code>dwm</code>作为窗口管理器, 在<code>dwm</code>中, 当整个桌面只有一个窗口时, 应用会自动全屏, 只会对应用的主窗口进行管理, 而不会对子窗口进行管理, 为了能够知道这里的逻辑, 我们需要在<code>dwm</code>中查看相关代码, 可以通过以下命令<code>clone</code>dwm项目的代码</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git clone https://git.suckless.org/dwm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>dwm</code>是一个很简单的窗口管理器, 整个逻辑都在<code>dwm.c</code>文件中, 我们可以查看<code>dwm.c</code>文件中的<code>main</code>函数, 该函数代码如下</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">int</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> argc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">char</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argc </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">strcmp</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"-v"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">die</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"dwm-"</span><span class="token plain">VERSION</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argc </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">die</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"usage: dwm [-v]"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">setlocale</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">LC_CTYPE</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">XSupportsLocale</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">fputs</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"warning: no locale support\n"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">stderr</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">XOpenDisplay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">die</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"dwm: cannot open display"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">checkotherwm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">setup</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">ifdef</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property expression" style="color:#36acaa">__OpenBSD__</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">pledge</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"stdio rpath proc exec"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">die</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"pledge"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token macro property directive-hash" style="color:#36acaa">#</span><span class="token macro property directive keyword" style="color:#00009f">endif</span><span class="token macro property" style="color:#36acaa"> </span><span class="token macro property comment" style="color:#999988;font-style:italic">/* __OpenBSD__ */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">run</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">cleanup</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">XCloseDisplay</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> EXIT_SUCCESS</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中, 我们需要关心的是<code>scan</code>函数, 这个函数从名字上来看是扫描窗口的, 具体的扫描窗口逻辑我们可以查看<code>scan</code>函数的实现, 该函数代码如下</p>
<div class="language-c codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-c codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">void</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">void</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">unsigned</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Window d1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> d2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain">wins </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">NULL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	XWindowAttributes wa</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">XQueryTree</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> root</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">d1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">d2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">num</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">XGetWindowAttributes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> wa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">override_redirect </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">XGetTransientForHint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">d1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">continue</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map_state </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IsViewable </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getstate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IconicState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">manage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> num</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">/* now the transients */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">XGetWindowAttributes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">continue</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">XGetTransientForHint</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">dpy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">d1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map_state </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IsViewable </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getstate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> IconicState</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">manage</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain">wa</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">XFree</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">wins</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在这段代码中, 我们可以看到, <code>dwm</code>会扫描整个桌面的所有窗口, 并且会根据窗口的属性来判断是否需要管理窗口, 窗口的属性可以通过<code>XGetWindowAttributes</code>函数获取, 窗口的属性包括窗口的</p>
<ul>
<li><code>map_state</code>(表示窗口是否可见, <code>IsViewable</code>表示窗口可见, <code>IsUnmapped</code>表示窗口不可见)</li>
<li><code>override_redirect</code>(表示窗口是否被重定向)</li>
<li><code>transient_for</code>(临时窗口, 例如对话框, 这个指指向了和这个窗口关联的窗口, 通常为父窗口)</li>
</ul>
<p>根据上述逻辑, 我们可以提取出<code>dwm</code>管理窗口的关键线索</p>
<ul>
<li><code>map_state</code>必须为<code>IsViewable</code></li>
<li><code>override_redirect</code>必须为<code>False</code></li>
<li><code>transient_for</code>必须为<code>None</code></li>
</ul>
<p>根据上述线索, 我们已经知道了要做哪些判断, 接下来我们需要知道如何获取到窗口的属性, 上述属性可以通过</p>
<ul>
<li>xwininfo</li>
<li>xprop</li>
</ul>
<p>来获取到</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具">工具<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E5%B7%A5%E5%85%B7" class="hash-link" aria-label="工具的直接链接" title="工具的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="xwininfo">xwininfo<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#xwininfo" class="hash-link" aria-label="xwininfo的直接链接" title="xwininfo的直接链接">​</a></h3>
<p>xwininfo可以获取到<code>Map State</code>和<code>Override Redirect State</code></p>
<p>命令用例如下:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xwininfo -id 0x200101</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xwininfo: Window id: 0x200101 "StringDecoderBenchmark.java ? test.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Absolute upper-left X:  0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Absolute upper-left Y:  0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Relative upper-left X:  0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Relative upper-left Y:  0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Width: 2560</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Height: 1440</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Depth: 24</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Visual: 0x21</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Visual Class: TrueColor</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Border width: 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Class: InputOutput</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Colormap: 0x20 (installed)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Bit Gravity State: NorthWestGravity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Window Gravity State: NorthWestGravity</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Backing Store State: NotUseful</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Save Under State: no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Map State: IsViewable</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Override Redirect State: no</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  Corners:  +0+0  -0+0  -0-0  +0-0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  -geometry 2560x1440+0+0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="xprop">xprop<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#xprop" class="hash-link" aria-label="xprop的直接链接" title="xprop的直接链接">​</a></h3>
<p>xprop可以获取到<code>WM_TRANSIENT_FOR(WINDOW)</code>信息, 如果获取不到, 说明窗口没有设置<code>WM_TRANSIENT_FOR</code>属性</p>
<p>命令用例如下:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xprop -id 0x200101</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">_MOTIF_DRAG_RECEIVER_INFO(_MOTIF_DRAG_RECEIVER_INFO) = 0x6c, 0x0, 0x5, 0x0, 0x1, 0x1, 0x20, 0x0, 0x0, 0x0, 0x0, 0x0, 0x10, 0x0, 0x0, 0x0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">XdndAware(ATOM) = BITMAP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_MOTIF_WM_HINTS(_MOTIF_WM_HINTS) = 0x3, 0x1, 0x1, 0x0, 0x0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_HINTS(WM_HINTS):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Client accepts input or input focus: False</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                Initial state is Normal State.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                bitmap id # to use for icon: 0x20010f</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                bitmap id # of mask for icon: 0x200111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                window id # to use for icon: 0x200108</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_NET_WM_PID(CARDINAL) = 3009322</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_CLIENT_MACHINE(STRING) = "gxc-stack-node-1"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_PROTOCOLS(ATOM): protocols  WM_TAKE_FOCUS, WM_DELETE_WINDOW</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_CLASS(STRING) = "jetbrains-idea", "jetbrains-idea"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_CLIENT_LEADER(WINDOW): window id # 0x2000d7</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_NET_WM_ICON_NAME(UTF8_STRING) = "StringDecoderBenchmark.java ? test.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_ICON_NAME(COMPOUND_TEXT) = "StringDecoderBenchmark.java ? test.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">_NET_WM_NAME(UTF8_STRING) = "StringDecoderBenchmark.java ? test.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_NAME(COMPOUND_TEXT) = "StringDecoderBenchmark.java ? test.sh"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">WM_NORMAL_HINTS(WM_SIZE_HINTS):</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                user specified location: 0, 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                program specified location: 0, 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                program specified size: 2560 by 1440</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                program specified minimum size: 340 by 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                window gravity: NorthWest</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="xdotool">xdotool<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#xdotool" class="hash-link" aria-label="xdotool的直接链接" title="xdotool的直接链接">​</a></h3>
<p><code>xdotool</code>可以用来修改窗口的大小以及偏移, 命令用例如下:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xdotool windowsize 0x200101 2560 1440 # 修改窗口大小为2560x1440</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">xdotool windowmove 0x200101 0 0 修改窗口偏移为(0,0), 这个值是相对于窗口左上角的偏移</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="xrandr">xrandr<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#xrandr" class="hash-link" aria-label="xrandr的直接链接" title="xrandr的直接链接">​</a></h4>
<p><code>xrandr</code>可以用来获取当前桌面的屏幕大小, 命令用例如下:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">xrandr </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Screen 0: minimum 32 x 32, current 2560 x 1440, maximum 32768 x 32768</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">VNC-0 connected 2560x1440+0+0 0mm x 0mm</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   2560x1440     60.00*+</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1920x1200     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1920x1080     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1600x1200     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1680x1050     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1400x1050     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1360x768      60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1280x1024     60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1280x960      60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1280x800      60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1280x720      60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   1024x768      60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   800x600       60.00  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">   640x480       60.00  </span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述输出中输出了系统中支持的分辨率, 其中<code>*</code>表示当前屏幕的分辨率</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="实现代码">实现代码<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81" class="hash-link" aria-label="实现代码的直接链接" title="实现代码的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vncserver">vncserver<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#vncserver" class="hash-link" aria-label="vncserver的直接链接" title="vncserver的直接链接">​</a></h3>
<p>首先是<code>vncserver</code>创建<code>VNC</code>会话的命令</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">vncserver -xstartup ~/.vnc-1721295131/start-remote-app.sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述命令中, 我们配置了<code>-xstartup</code>参数, 这样来确保只运行我们期望的桌面应用而不是整个桌面环境,
需要注意的是, 脚本文件是动态生成的, 所以每次启动<code>vncserver</code>都会生成一个新的脚本文件</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vnc-1721295131start-remote-appsh"><code>~/.vnc-1721295131/start-remote-app.sh</code><a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#vnc-1721295131start-remote-appsh" class="hash-link" aria-label="vnc-1721295131start-remote-appsh的直接链接" title="vnc-1721295131start-remote-appsh的直接链接">​</a></h3>
<p>接下来是<code>~/.vnc-1721295131/start-remote-app.sh</code>脚本内容, 大致的工作代码如下</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">~/.vnc-1721295131/start-remote-app.sh</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#!/bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while true; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sleep 0.5s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "Begin loop"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  screen_size=$(xrandr | grep '*+' | tr ' ' '\n' | grep "x" | tr 'x' ' ')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  for id in $(xwininfo -root -children | grep "^     0x" | awk '{print $1}'); do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    info=$(xwininfo -id $id)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if ! (echo $info | grep -q "Override Redirect State: no" &amp;&amp; echo $info | grep -q "Map State: IsViewable"); then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # xwininfo -id $id</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    # WM_TRANSIENT_FOR(WINDOW): window id # 0x1000f4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    if xprop -id $id | grep -q 'WM_TRANSIENT_FOR(WINDOW)'; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      continue</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "Need to manage window $id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xdotool windowsize $id $screen_size</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    xdotool windowmove $id 0 0</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "End inspect window $id"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  done</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "End loop"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done | tee /tmp/xwininfo.log &amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">loop_pid=$!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">/fastone/users/admin/idea-IU-241.18034.62/bin/idea.sh &amp;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">desktop_app_pid=$!</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">wait $desktop_app_pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">while true; do</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  if [ -z "$(xlsclients)" ]; then</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    echo "There is no window, exit"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kill $loop_pid</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    break</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fi</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  sleep 0.5s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  echo "There is window, continue"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">done | tee /tmp/xlsclients.log</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在上述脚本中<code>/fastone/users/admin/idea-IU-241.18034.62/bin/idea.sh</code>是实际桌面应用的的启动命令, 后期会根据实际应用进行替换</p>
<p>整个实现思路是:</p>
<ul>
<li>在主bash中在后台开启一个进程<br></li>
</ul>
<blockquote>
<p>这个进程是一个循环, 用来将系统中所有满足条件的主窗口调整全屏</p>
</blockquote>
<ul>
<li>在后台开启桌面程序的进行, 并等待桌面程序退出<br></li>
<li>当桌面程序退出后, 进入循环, 通过<code>xlsclients</code>命令来判断是否还有窗口, 如果没有窗口了, 则退出循环并杀死循环进程确保循环进程退出<br></li>
</ul>
<blockquote>
<p>通过<code>xlsclients</code>命令来判断的主要目的是有可能用户通过图形应用打开了另一个图形应用并将之前的应用退出, 如果不进行检查会导致VNC会话结束, 这不是我们期望的</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/18/implement-fullscreen-window-in-x-desktop-environment-without-window-manager#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://dwm.suckless.org/" target="_blank" rel="noopener noreferrer">dwm</a></li>
<li><a href="https://tronche.com/gui/x/" target="_blank" rel="noopener noreferrer">The X Window system</a></li>
<li><a href="https://tronche.com/gui/x/xlib/" target="_blank" rel="noopener noreferrer">The Xlib Manual</a></li>
<li><a href="https://www.x.org/releases/current/doc/libX11/libX11/libX11.html" target="_blank" rel="noopener noreferrer">Xlib - C Language X Interface</a></li>
<li><a href="https://tronche.com/gui/x/xlib/window/attributes/override-redirect.html" target="_blank" rel="noopener noreferrer">3.2.8 Override Redirect Flag</a></li>
<li><a href="https://tronche.com/gui/x/xlib/window/map.html" target="_blank" rel="noopener noreferrer">3.5 Mapping Windows</a></li>
<li><a href="https://tronche.com/gui/x/xlib/ICCclient-to-window-manager/wm-transient-for.html" target="_blank" rel="noopener noreferrer">14.1.9 Setting and Reading the WM_TRANSIENT_FOR Property</a></li>
<li><a href="https://python-xlib.sourceforge.net/doc/html/" target="_blank" rel="noopener noreferrer">The Python X Library</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>linux</category>
            <category>vnc</category>
            <category>tigervnc</category>
            <category>desktop</category>
            <category>xorg</category>
            <category>x11</category>
            <category>xdotool</category>
            <category>xwininfo</category>
            <category>xrandr</category>
            <category>xprop</category>
            <category>vncserver</category>
        </item>
        <item>
            <title><![CDATA[在Chrome中内置端侧大模型]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome</guid>
            <pubDate>Sat, 06 Jul 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[最近Chrome在开发者预览版中发布了Built-in AI Early Preview Program, 这个功能能够让Chrome启用生成式AI, 这个功能目前处于预览阶段, 通过一些配置才可以启用, 以下是启用步骤:]]></description>
            <content:encoded><![CDATA[<p>最近<code>Chrome</code>在开发者预览版中发布了<code>Built-in AI Early Preview Program</code>, 这个功能能够让<code>Chrome</code>启用生成式AI, 这个功能目前处于预览阶段, 通过一些配置才可以启用, 以下是启用步骤:</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启用步骤">启用步骤<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome#%E5%90%AF%E7%94%A8%E6%AD%A5%E9%AA%A4" class="hash-link" aria-label="启用步骤的直接链接" title="启用步骤的直接链接">​</a></h2>
<ol>
<li>打开<code>https://www.google.com/chrome/dev/</code>下载最新的<code>Chrome Dev</code>版本.</li>
<li>打开<code>chrome://flags/#optimization-guide-on-device-model </code>, 找到<code>Enables optimization guide on device</code>功能, 并配置为<code>Enabled BypassPerfRequirement</code>.</li>
<li>打开<code>chrome://flags/#prompt-api-for-gemini-nano</code>, 找到<code>Prompt API for Gemini Nano</code>功能, 配置为<code>Enabled</code>.</li>
<li>打开<code>chrome://components/</code>确认<code>Optimization Guide On Device Model</code>组件下载成功并且是最新版本.</li>
<li>打开<code>console</code>, 输入<code>await window.ai.canCreateTextSession();</code>, 如果返回值为<code>readily</code>, 那么说明已经启用了生成式AI.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="试用">试用<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome#%E8%AF%95%E7%94%A8" class="hash-link" aria-label="试用的直接链接" title="试用的直接链接">​</a></h2>
<p>创建<code>html</code>文件, 并将以下内容复制到其中:</p>
<div class="language-html codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">index.html</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-html codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&lt;!</span><span class="token doctype doctype-tag" style="color:#999988;font-style:italic">doctype</span><span class="token doctype" style="color:#999988;font-style:italic"> </span><span class="token doctype name" style="color:#999988;font-style:italic">html</span><span class="token doctype punctuation" style="color:#393A34;font-style:italic">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">meta</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">charset</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">utf-8</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain">Marked in the browser</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">title</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">script</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">src</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">https://cdn.jsdelivr.net/npm/marked/marked.min.js</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token script"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">script</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">head</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">body</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">html</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>打开<code>F12</code>, 赋值以下代码到<code>Console</code>中, <code>prompt</code>根据需求进行修改:</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">session </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">window</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">ai</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">createTextSession</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">var</span><span class="token plain"> res </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> session</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">promptStreaming</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Give me typescript code about generic type</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">body</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">innerHTML</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> marked</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">parse</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">res</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<p>由于该功能尚处于预览阶段, 随着迭代更新, 配置可能会发生变化, 请关注<code>Chrome</code>官方文档以获取最新配置信息.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2024/07/06/enable-ai-in-chrome#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://docs.google.com/document/d/1VG8HIyz361zGduWgNG7R_R8Xkv0OOJ8b5C9QKeCjU0c" target="_blank" rel="noopener noreferrer">Built-in AI Early Preview Program</a></li>
</ul>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[将Asciinema集成到Docusaurus项目中]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project</guid>
            <pubDate>Fri, 28 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[在Markdown文档中, 涉及到一些终端操作时, 需要一种方式来展示这些操作.]]></description>
            <content:encoded><![CDATA[<p>在<code>Markdown</code>文档中, 涉及到一些终端操作时, 需要一种方式来展示这些操作.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="常见的解决方案">常见的解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%B8%B8%E8%A7%81%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="常见的解决方案的直接链接" title="常见的解决方案的直接链接">​</a></h2>
<p>虽然<code>Markdown</code>内置的<code>codeblock</code>语法方便, 但在某些情况下, 它也有不足之处. <br>
比如, 当终端操作步骤过长, 包含大量输入输出内容时, 会导致文档占用过多空间, 影响阅读体验. <br>
另一种方法是将终端操作录制成视频并通过链接引用, 这样视频可以嵌入页面中展示操作过程. <br>
然而, 视频文件通常较大, 占用较多空间, 而终端操作本质上只是字符串.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="工具介绍">工具介绍<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="工具介绍的直接链接" title="工具介绍的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="asciinema">Asciinema<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#asciinema" class="hash-link" aria-label="Asciinema的直接链接" title="Asciinema的直接链接">​</a></h3>
<p><a href="https://asciinema.org/" target="_blank" rel="noopener noreferrer">Asciinema</a>是一个开源的终端录制工具, 可以记录终端操作并生成可播放的文件.<br>
这个文件仅包含文本信息, 不占用太多空间, 非常适合展示终端操作演示.<br></p>
<p>要生成终端操作演示, 需要安装<code>Asciinema</code>的命令行工具, 并使用该工具进行录制.<br>
详细的安装和使用教程可以参考<a href="https://docs.asciinema.org/getting-started/" target="_blank" rel="noopener noreferrer">getting-started</a>页面.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus">Docusaurus<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#docusaurus" class="hash-link" aria-label="Docusaurus的直接链接" title="Docusaurus的直接链接">​</a></h3>
<p><a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>是一个开源的静态网站生成器, 基于 <code>React</code> 实现, 允许使用<code>Markdown</code>编写文档, 并用
<code>React</code>渲染. <br>
在<code>Docusaurus</code>中, 支持使用<code>MDX</code>扩展.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="mdx">MDX<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#mdx" class="hash-link" aria-label="MDX的直接链接" title="MDX的直接链接">​</a></h3>
<p><a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a>是<code>Markdown</code>的扩展, 允许我们在<code>Markdown</code>文档中使用<code>JavaScript</code>
代码来实现更丰富的文档内容渲染.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能设计">功能设计<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1" class="hash-link" aria-label="功能设计的直接链接" title="功能设计的直接链接">​</a></h2>
<p><code>Docusaurus</code>支持<code>MDX</code>语法, 因此我们可以在文档中引入<code>JavaScript</code>代码来渲染页面.<br>
虽然<code>Asciinema</code>提供了用于页面渲染的<code>JavaScript</code>库, 但遗憾的是目前只有基本的<code>JavaScript</code>实现. <br>
由于<code>Docusaurus</code>是基于<code>React</code>实现的, 因此我们需要将<code>Asciinema</code>提供的<code>JavaScript</code>库封装为<code>Docusaurus</code>支持的<code>React</code>
组件.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="封装react组件">封装<code>React</code>组件<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%B0%81%E8%A3%85react%E7%BB%84%E4%BB%B6" class="hash-link" aria-label="封装react组件的直接链接" title="封装react组件的直接链接">​</a></h3>
<p>如果我们需要在<code>Docusaurus</code>中集成<code>Asciinema</code>, 那么需要完成以下步骤:</p>
<ul>
<li>将<code>Asciinema</code>提供的<code>JavaScript</code>库封装为<code>Docusaurus</code>支持的<code>React</code>组件.</li>
</ul>
<p>完成上述实现后, 我们就可以在<code>Markdown</code>文档中引入<code>Asciinema</code>动画文件, 并将其渲染到页面中.</p>
<p>例如：</p>
<div class="language-mdxjs codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-mdxjs codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import AsciinemaPlayer from '@site/src/components/asciinema/react';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;AsciinemaPlayer src="/blog/2024-06-28-demo.cast" /&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这样, 最终的渲染效果应该是:<br></p>
<p></p><div></div><p></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="扩展markdown解析器并实现link语法的渲染">扩展<code>Markdown</code>解析器并实现<code>link</code>语法的渲染<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E6%89%A9%E5%B1%95markdown%E8%A7%A3%E6%9E%90%E5%99%A8%E5%B9%B6%E5%AE%9E%E7%8E%B0link%E8%AF%AD%E6%B3%95%E7%9A%84%E6%B8%B2%E6%9F%93" class="hash-link" aria-label="扩展markdown解析器并实现link语法的渲染的直接链接" title="扩展markdown解析器并实现link语法的渲染的直接链接">​</a></h3>
<p>在上一个步骤中, 最终的<code>Markdown</code>文件中需要编写<code>JavaScript</code>代码来完成渲染, 但对于文档编写者来说会面临以下问题:</p>
<ul>
<li>如果文档项目由多人编写, 语法问题的概率会增加.</li>
<li><code>Markdown</code>迁移难度加大, 因为<code>JS</code>代码只是实现某个功能的一种方式, 而不应该在<code>Markdown</code>文件中显式依赖解决方案空间的细节.</li>
</ul>
<p>为了解决以上问题, 我们需要优化使用方式, 降低使用者的难度, 同时屏蔽底层的细节. <br></p>
<p>最终的使用者可能更希望在<code>Markdown</code>中使用<code>link</code>语法来引入<code>Asciinema</code>动画文件, 而在底层我们需要通过<code>Docusaurus</code>
提供的功能进行扩展渲染.</p>
<p>例如, 用户在文档中增加如下内容:</p>
<div class="language-markdown codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-markdown codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token url" style="color:#36acaa">[</span><span class="token url content" style="color:#36acaa">x</span><span class="token url" style="color:#36acaa">](</span><span class="token url" style="color:#36acaa">/blog/2024-06-28-demo.cast</span><span class="token url" style="color:#36acaa">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>那么, 最终的渲染效果应该是:<br></p>
<p></p><div></div><p></p>
<p>上述实现思路主要是扩展<code>Docusaurus</code>的<code>Markdown</code>解析器, 并对其进行扩展, 最终转换为上一个步骤中的<code>React</code>组件.<br>
在<code>Docusaurus</code>中, 可以通过扩展<code>remark</code>和<code>rehype</code>来实现对<code>Markdown</code>语法解析的扩展. <br>
这种方法允许我们在<code>Markdown</code>解析为<code>AST</code>后进行修改, 从而实现对<code>Markdown</code>的扩展功能. <br></p>
<p>详细的文档和插件开发信息, 请参考<a href="https://docusaurus.io/docs/Markdown-features/plugins" target="_blank" rel="noopener noreferrer">MDX Plugins</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="功能实现">功能实现<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%8A%9F%E8%83%BD%E5%AE%9E%E7%8E%B0" class="hash-link" aria-label="功能实现的直接链接" title="功能实现的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="封装asciinema库为react组件">封装<code>Asciinema</code>库为<code>React</code>组件<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%B0%81%E8%A3%85asciinema%E5%BA%93%E4%B8%BAreact%E7%BB%84%E4%BB%B6" class="hash-link" aria-label="封装asciinema库为react组件的直接链接" title="封装asciinema库为react组件的直接链接">​</a></h3>
<p>首先, 将<code>Asciinema</code>添加到项目中:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yarn add asciinema-player</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>接下来, 我们需要封装成<code>React</code>组件.</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/components/asciinema/react/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// import 'asciinema-player/dist/bundle/asciinema-player.css';</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./asciinema-player.css'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// We hacked the CSS of the asciinema-player located at 'asciinema-player/dist/bundle/asciinema-player.css'.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token constant" style="color:#36acaa">FC</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useEffect</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useRef</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> useState</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">useColorMode</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@docusaurus/theme-common'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">type</span><span class="token plain"> </span><span class="token class-name">Props</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	src</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	cols</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	rows</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	autoPlay</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	preload</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	loop</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">boolean</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	startAt</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	speed</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	idleTimeLimit</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">number</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	theme</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	poster</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	fit</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	fontSize</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token builtin">string</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> AsciinemaPlayer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">FC</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">Props</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">...</span><span class="token plain">rest</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">player</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setPlayer</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">useState</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name keyword" style="color:#00009f">typeof</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name keyword" style="color:#00009f">import</span><span class="token generic-function generic class-name"> </span><span class="token generic-function generic class-name punctuation" style="color:#393A34">(</span><span class="token generic-function generic class-name string" style="color:#e3116c">'asciinema-player'</span><span class="token generic-function generic class-name punctuation" style="color:#393A34">)</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">import</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"asciinema-player"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token function" style="color:#d73a49">setPlayer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// executed once</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> colorMode </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useColorMode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> ref </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token generic-function function" style="color:#d73a49">useRef</span><span class="token generic-function generic class-name operator" style="color:#393A34">&lt;</span><span class="token generic-function generic class-name">HTMLDivElement</span><span class="token generic-function generic class-name operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentRef </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> ref</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">current</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> instance </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> player</span><span class="token operator" style="color:#393A34">?.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> currentRef</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token operator" style="color:#393A34">...</span><span class="token plain">rest</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> theme</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> colorMode </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'dark'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'docusaurus-classic-dark'</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'docusaurus-classic-light'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				instance</span><span class="token operator" style="color:#393A34">?.</span><span class="token function" style="color:#d73a49">dispose</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">src</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> rest</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> colorMode</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> player</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// executed every time the array items change</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div ref</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">ref</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> AsciinemaPlayer</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><a href="https://www.geek66.cyou/zh-CN/assets/files/2024-06-28-asciinema-player-31d6cfe0d16ae931b73c59d7e0c089c0.css" target="_blank">src/components/asciinema/react/asciinema-player.css</a></p>
<p>上面的代码中, 我们将<code>Asciinema</code>的<code>JavaScript</code>库封装为<code>React</code>组件.<br>
利用<code>React</code>提供的<code>Ref</code>功能, 将<code>Asciinema</code>操作的<code>DOM</code>组件与<code>React</code>组件关联起来, 以确保<code>React</code>能够集成该组件. <br>
为了避免重复渲染, 需要确保组件在适当的时候被<code>dispose</code>.<br>
为了适配<code>Docusaurus</code>的主题, 我们需要引入自定义的<code>CSS</code>样式. 在<code>Asciinema</code>提供的基础样式上, 添加对<code>Docusaurus</code>主题的支持.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="自定义markdown语法树解析">自定义<code>Markdown</code>语法树解析<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E8%87%AA%E5%AE%9A%E4%B9%89markdown%E8%AF%AD%E6%B3%95%E6%A0%91%E8%A7%A3%E6%9E%90" class="hash-link" aria-label="自定义markdown语法树解析的直接链接" title="自定义markdown语法树解析的直接链接">​</a></h3>
<p>首先, 我们需要将下面的依赖安装到项目中:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">yarn add rehype-katex remark-math</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这两个库用于解析<code>Markdown</code>语法树, 并对语法树内容进行修改, 以实现我们的目的.<br></p>
<p>现在可以开始编写下面的代码来实现</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">src/components/asciinema/Markdown/Markdown.ts</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">visit</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'unist-util-visit'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">plugin</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">transformer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tree</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> importInserted </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">visit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">tree</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'link'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> index</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> parent</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">node</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">endsWith</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">".cast"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">importInserted</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> importNode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxjsEsm'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">import AsciinemaPlayer from '@site/src/components/asciinema/react';</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					data</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">						estree</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">							type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Program'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">							body</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">									type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ImportDeclaration'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">									specifiers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">										</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">											type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'ImportDefaultSpecifier'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">											local</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Identifier'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AsciinemaPlayer'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">										</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">									</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">									source</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Literal'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'@site/src/components/asciinema/react'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">							</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">						</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				tree</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">children</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">unshift</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">importNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				importInserted </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> jsxNode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxFlowElement'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'AsciinemaPlayer'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				attributes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxAttribute'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'src'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> node</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">url</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxAttribute'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'theme'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'docusaurus-classic-light'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxAttribute'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rows'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxAttribute'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'idleTimeLimit'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">type</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'mdxJsxAttribute'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'preload'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				children</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			parent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">children</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">splice</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">index</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> jsxNode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> transformer</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> plugin</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在上述代码中, 我们对<code>link</code>进行了修改, 并将其转换为<code>JSX</code>语法, 这样可以在<code>Markdown</code>中直接使用<code>Asciinema</code>组件.
除了上述代码, 我们还需要在<code>Docusaurus</code>中进行配置以进行功能集成.<br></p>
<p>参考以下配置来配置<code>Docusaurus</code>:</p>
<div class="language-typescript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">docusaurus.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-typescript codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> rehypeKatex </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'rehype-katex'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">import</span><span class="token plain"> asciinema </span><span class="token keyword" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'./src/components/asciinema/Markdown/Markdown'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">default</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	presets</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token string" style="color:#e3116c">'@docusaurus/preset-classic'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				docs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					path</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'docs'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					beforeDefaultRemarkPlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">asciinema</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					rehypePlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">rehypeKatex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				blog</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					beforeDefaultRemarkPlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">asciinema</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					rehypePlugins</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">rehypeKatex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述配置对<code>Docusaurus</code>中的<code>Docs</code>和<code>Blog</code>进行了配置, 并实现了<code>Markdown</code>中的<code>Asciinema</code>组件的解析.<br></p>
<p>需要注意的一点是, 我们使用<code>beforeDefaultRemarkPlugins</code>而不是<code>remarkPlugins</code>进行配置的主要原因是, <br>
<code>Docusaurus</code>会对<code>Markdown</code>语法树进行修改, 因此我们需要在其修改之前进行配置, 以确保最终的结果正确.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/28/integrate-asciinema-into-dodocusaurus-project#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://mdxjs.com/" target="_blank" rel="noopener noreferrer">MDX</a></li>
<li><a href="https://docusaurus.io/docs/Markdown-features/plugins" target="_blank" rel="noopener noreferrer">MDX Plugins</a></li>
<li><a href="https://github.com/remarkjs/remark" target="_blank" rel="noopener noreferrer">remark</a></li>
<li><a href="https://github.com/syntax-tree/mdast" target="_blank" rel="noopener noreferrer">mdast</a></li>
<li><a href="https://github.com/syntax-tree/mdast-util-mdx-jsx" target="_blank" rel="noopener noreferrer">mdast-util-mdx-jsx</a></li>
<li><a href="https://github.com/syntax-tree/mdast-util-mdxjs-esm?tab=readme-ov-file#mdxjsesm" target="_blank" rel="noopener noreferrer">mdast-util-mdxjs-esm</a></li>
</ul>]]></content:encoded>
            <category>docusaurus</category>
            <category>react</category>
            <category>mdx</category>
            <category>asciinema</category>
            <category>remark</category>
            <category>mdast</category>
            <category>mdast-util-mdx-jsx</category>
            <category>mdast-util-mdxjs-esm</category>
            <category>rehype-katex</category>
            <category>remark-math</category>
        </item>
        <item>
            <title><![CDATA[X Window System]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system</guid>
            <pubDate>Sun, 23 Jun 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[X Window System(简称X), 因为其最新版本为11, 所以也被称为X11.]]></description>
            <content:encoded><![CDATA[<p><code>X Window System</code>(简称<code>X</code>), 因为其最新版本为<code>11</code>, 所以也被称为<code>X11</code>. <br></p>
<p>这是一个为图形桌面系统设计的规范框架, 涵盖了以下关键功能:</p>
<ul>
<li>屏幕图像的渲染和显示</li>
<li>鼠标和键盘的交互处理</li>
</ul>
<p>在<code>Linux</code>环境下, <code>X Window System</code>的实现是<code>X.Org</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="架构概述">架构概述<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0" class="hash-link" aria-label="架构概述的直接链接" title="架构概述的直接链接">​</a></h2>
<p><code>X</code>采用客户端/服务器(C/S)架构, 由<code>X Server</code>和多个<code>X Client</code>组成. <br>
这意味着<code>X Server</code>和<code>X Client</code>可以分别在不同的设备上运行. <br>
常见应用场景如<code>SSH X11 Forwarding</code>, 其中SSH客户端运行<code>X Server</code>
, 图形应用则在SSH服务器上运行, 所有图形交互都在SSH客户端完成. <br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要组件">主要组件<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#%E4%B8%BB%E8%A6%81%E7%BB%84%E4%BB%B6" class="hash-link" aria-label="主要组件的直接链接" title="主要组件的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-server">X Server<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-server" class="hash-link" aria-label="X Server的直接链接" title="X Server的直接链接">​</a></h3>
<p><code>X Server</code>作为桥梁, 连接底层硬件设备和上层<code>X Client</code>, 提供与硬件交互的接口. 硬件设备包括:</p>
<ul>
<li>鼠标</li>
<li>键盘</li>
<li>触摸板</li>
<li>屏幕</li>
</ul>
<p>这些设备按功能分为<code>输入设备</code>和<code>输出设备</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-client">X Client<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-client" class="hash-link" aria-label="X Client的直接链接" title="X Client的直接链接">​</a></h3>
<p><code>X Client</code>是<code>X Server</code>的客户端, 常见的<code>X Client</code>包括:</p>
<ul>
<li>Firefox</li>
<li>Chromium</li>
<li>Thunderbird</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-window-manager">X Window Manager<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-window-manager" class="hash-link" aria-label="X Window Manager的直接链接" title="X Window Manager的直接链接">​</a></h3>
<p><code>Window Manager</code>是一个特殊类型的<code>X Client</code>, 负责管理其他<code>Client</code>, 如调整窗口大小和缩放. 常见的<code>Window Manager</code>包括:</p>
<ul>
<li>GNOME</li>
<li>KDE</li>
<li>XFCE</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-display-manager">X Display Manager<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-display-manager" class="hash-link" aria-label="X Display Manager的直接链接" title="X Display Manager的直接链接">​</a></h3>
<p><code>X Display Manager</code>负责用户登录控制, 验证用户身份(如用户名和密码或指纹), 并决定是否启动图形系统. <br></p>
<p>常见的<code>Display Manager</code>包括:</p>
<ul>
<li>GDM</li>
<li>SDDM</li>
<li>LightDM</li>
<li>KDM</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动流程">启动流程<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B" class="hash-link" aria-label="启动流程的直接链接" title="启动流程的直接链接">​</a></h2>
<p><code>X</code>的启动入口为<code>startx</code>命令(此命令位于<code>/bin/startx</code>)</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># This is just a sample implementation of a slightly less primitive</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># interface than xinit. It looks for XINITRC and XSERVERRC environment</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># variables, then user .xinitrc and .xserverrc files, and then system</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># xinitrc and xserverrc files, else lets xinit choose its default.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># The system xinitrc should probably do things like check for</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># .Xresources files and merge them in, start up a window manager, and</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># pop a clock and several xterms.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"># Site administrators are STRONGLY urged to write nicer versions.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">#</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个命令是对<code>xinit</code>命令的封装, 它会根据<code>X Server</code>和<code>X Client</code>的配置, 启动<code>X Server</code>和<code>X Client</code>.</p>
<p><code>xinit</code>命令负责初始化<code>X Server</code>和<code>X Client</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-server-1"><code>X Server</code><a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-server-1" class="hash-link" aria-label="x-server-1的直接链接" title="x-server-1的直接链接">​</a></h3>
<p><code>X Server</code>初始化脚本位于<code>/etc/X11/xinit/xserverrc</code>, 内容比较简单, 只是启动<code>X Server</code>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="x-client-1"><code>X Client</code><a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#x-client-1" class="hash-link" aria-label="x-client-1的直接链接" title="x-client-1的直接链接">​</a></h3>
<p><code>X Client</code>初始化脚本位于<code>/etc/X11/xinit/xinitrc</code>(或<code>$HOME/.xinitrc</code>, 取决于用户目录是否有对应文件).<br>
此脚本中负责初始化<code>X Client</code>, 这里要初始化的<code>X Client</code>通常为桌面.<br></p>
<p>由于发行版的不同, <code>X Client</code>具体逻辑也会不同.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="rehl">REHL<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#rehl" class="hash-link" aria-label="REHL的直接链接" title="REHL的直接链接">​</a></h4>
<p>基于<code>RedHat</code>的发行版, 例如<code>CentOS</code>, 脚本内部调用<code>/etc/X11/xinit/Xclients</code>进行初始化,
在较旧的系统中(<code>CentOS 6.9</code>, <code>CentOS 7.5</code>), 仅支持<code>GNOME</code>和<code>KDE</code>. <br>
如果需要使用其他桌面, 需手动配置此文件, 将<code>PREFERRED</code>变量设置为相应桌面的完整二进制文件路径.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="debian">Debian<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#debian" class="hash-link" aria-label="Debian的直接链接" title="Debian的直接链接">​</a></h4>
<p>基于<code>Debian</code>的发行版, 例如<code>Ubuntu</code>, 脚本内部调用<code>/etc/X11/Xsession</code>进行初始化,</p>
<p>在这个脚本中会调用<code>/etc/X11/Xsession.d/</code>目录下的脚本进行初始化,
在<code>/etc/X11/Xsession.d/50x11-common_determine-startup</code>中推断<code>STARTUP</code>变量, 值通常为<code>/usr/bin/x-session-manager</code></p>
<blockquote>
<p>这个文件是一个link, 通过<code>readlink /usr/bin/x-session-manager</code>可以看到<code>link</code>的位置为<code>/etc/alternatives/x-session-manager</code>
而<code>/etc/alternatives/x-session-manager</code>也是一个link, 通过<code>readlink /etc/alternatives/x-session-manager</code>可以得到最终的<code>link</code>位置, 例如: <code>/usr/bin/startxfce4</code></p>
</blockquote>
<p>最终<code>/etc/X11/Xsession.d/99x11-common_start</code>通过<code>$STARTUP</code>变量启动桌面, 完成图形系统的初始化.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="arch">Arch<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#arch" class="hash-link" aria-label="Arch的直接链接" title="Arch的直接链接">​</a></h4>
<p>基于<code>Arch</code>的发行版, 例如<code>Manjaro</code>,
<code>xinitrc</code>位于<code>$HOME/.xinitrc</code>,</p>
<p>脚本内部调用<code>/etc/X11/xinit/xinitrc.d</code>目录下的脚本进行初始化. <br>
这个脚本内部的<code>get_session</code>函数用于获取桌面的启动路径, 支持常见的桌面, 例如:</p>
<ul>
<li>awesome</li>
<li>bspwm</li>
<li>budgie</li>
<li>deepin</li>
<li>enlightenment</li>
<li>fluxbox</li>
<li>gnome</li>
<li>i3/i3wm</li>
<li>jwm</li>
<li>kde</li>
<li>lxde</li>
<li>lxqt</li>
<li>mate</li>
<li>xfce</li>
<li>openbox</li>
<li>gnome</li>
</ul>
<p>通过<code>DEFAULT_SESSION</code>变量可以设置默认的桌面, 此变量默认值为<code>gnome-session</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2024/06/23/x-window-system#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料��的直接链接">​</a></h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/X_Window_System" target="_blank" rel="noopener noreferrer">X Window System</a></li>
<li><a href="https://en.wikipedia.org/wiki/X.Org_Server" target="_blank" rel="noopener noreferrer">X.Org Server</a></li>
<li><a href="https://en.wikipedia.org/wiki/X_display_manager" target="_blank" rel="noopener noreferrer">X display manager</a></li>
</ul>]]></content:encoded>
            <category>linux</category>
            <category>desktop</category>
            <category>xorg</category>
            <category>x11</category>
        </item>
        <item>
            <title><![CDATA[在GitLab的CI/CD中支持Go Module引用同一代码库下的其他Go仓库]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd</guid>
            <pubDate>Thu, 11 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[在Golang中, 代码复用的实现方式是通过git方式引用代码.]]></description>
            <content:encoded><![CDATA[<p>在<code>Golang</code>中, 代码复用的实现方式是通过<code>git</code>方式引用代码.<br>
如果在<code>CI/CD</code>中引用同一代码库下的其他<code>Go</code>仓库, 由于<code>Gitlab</code>对仓库的访问权限限制, 还需要执行一些配置来确保<code>go mod</code>
能够正确下载依赖项.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="操作步骤">操作步骤<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd#%E6%93%8D%E4%BD%9C%E6%AD%A5%E9%AA%A4" class="hash-link" aria-label="操作步骤的直接链接" title="操作步骤的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="设置goprivate环境变量">设置<code>GOPRIVATE</code>环境变量<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd#%E8%AE%BE%E7%BD%AEgoprivate%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F" class="hash-link" aria-label="设置goprivate环境变量的直接链接" title="设置goprivate环境变量的直接链接">​</a></h3>
<p>设置<code>GOPRIVATE</code>变量</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">export GOPRIVATE=${CI_SERVER_HOST}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这里的<code>${CI_SERVER_HOST}</code>是gitlab代码库的域名.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="使用git-config的insteadof指令替换原始的https请求并添加认证信息">使用<code>git config</code>的<code>insteadOf</code>指令替换原始的<code>https</code>请求并添加认证信息<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd#%E4%BD%BF%E7%94%A8git-config%E7%9A%84insteadof%E6%8C%87%E4%BB%A4%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%A7%8B%E7%9A%84https%E8%AF%B7%E6%B1%82%E5%B9%B6%E6%B7%BB%E5%8A%A0%E8%AE%A4%E8%AF%81%E4%BF%A1%E6%81%AF" class="hash-link" aria-label="使用git-config的insteadof指令替换原始的https请求并添加认证信息的直接链接" title="使用git-config的insteadof指令替换原始的https请求并添加认证信息的直接链接">​</a></h3>
<p><code>go mod</code>通过<code>git</code>下载依赖项.<br>
对于私有的git仓库, 如果不进行认证, 将会出现错误.<br></p>
<p>使用下述命令替换原始的<code>https</code>请求并添加认证信息</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}".insteadOf "https://${CI_SERVER_HOST}"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述<code>insteadOf</code>指令为原始的<code>https</code>请求添加了认证信息.<br>
认证凭证来自于<code>CI_JOB_TOKEN</code>, 这是CI/CD生命周期中自动生成的.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="配置被依赖的仓库允许其他项目通过ci_job_token进行访问">配置被依赖的仓库允许其他项目通过<code>CI_JOB_TOKEN</code>进行访问<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd#%E9%85%8D%E7%BD%AE%E8%A2%AB%E4%BE%9D%E8%B5%96%E7%9A%84%E4%BB%93%E5%BA%93%E5%85%81%E8%AE%B8%E5%85%B6%E4%BB%96%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87ci_job_token%E8%BF%9B%E8%A1%8C%E8%AE%BF%E9%97%AE" class="hash-link" aria-label="配置被依赖的仓库允许其他项目通过ci_job_token进行访问的直接链接" title="配置被依赖的仓库允许其他项目通过ci_job_token进行访问的直接链接">​</a></h3>
<p>在<code>GitLab</code>中进入被依赖的仓库, 在<code>Settings &gt; CI/CD &gt; Token Access</code>中配置允许其他项目通过<code>CI_JOB_TOKEN</code>进行访问。</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/11/support-gomod-referencing-local-repos-in-gitlab-cicd#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://docs.gitlab.com/ee/ci/jobs/ci_job_token.html#add-a-project-to-the-job-token-allowlist" target="_blank" rel="noopener noreferrer">Add a project to the job token allowlist</a></li>
</ul>]]></content:encoded>
            <category>golang</category>
            <category>git</category>
            <category>gitlab</category>
            <category>cicd</category>
        </item>
        <item>
            <title><![CDATA[升级spring-cloud-gateway到4.1.0的过程中遇到的问题的以及对应解决方案]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/04/08/troubleshooting-and-solutions-encountered-during-the-upgrade-process-of-spring-cloud-gateway-to-version-4.1.0</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/04/08/troubleshooting-and-solutions-encountered-during-the-upgrade-process-of-spring-cloud-gateway-to-version-4.1.0</guid>
            <pubDate>Mon, 08 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[此文记录了升级spring-cloud-gateway到4.1.0的过程中遇到的问题以及对应的解决方案.]]></description>
            <content:encoded><![CDATA[<p>此文记录了升级spring-cloud-gateway到4.1.0的过程中遇到的问题以及对应的解决方案.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="springcloudgatewayroutes中定义的转发规则失效-提示404-not_found-no-static-resource-xxx"><code>spring.cloud.gateway.routes</code>中定义的转发规则失效, 提示<code>404 NOT_FOUND "No static resource xxx."</code><a href="https://www.geek66.cyou/zh-CN/blog/2024/04/08/troubleshooting-and-solutions-encountered-during-the-upgrade-process-of-spring-cloud-gateway-to-version-4.1.0#springcloudgatewayroutes%E4%B8%AD%E5%AE%9A%E4%B9%89%E7%9A%84%E8%BD%AC%E5%8F%91%E8%A7%84%E5%88%99%E5%A4%B1%E6%95%88-%E6%8F%90%E7%A4%BA404-not_found-no-static-resource-xxx" class="hash-link" aria-label="springcloudgatewayroutes中定义的转发规则失效-提示404-not_found-no-static-resource-xxx的直接链接" title="springcloudgatewayroutes中定义的转发规则失效-提示404-not_found-no-static-resource-xxx的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/08/troubleshooting-and-solutions-encountered-during-the-upgrade-process-of-spring-cloud-gateway-to-version-4.1.0#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h3>
<p>这个问题的原因是项目中的类继承了<code>org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping</code>
但是新版本不兼容导致的.<br>
在新版本中<code>RoutePredicateHandlerMapping</code>的<code>@Bean</code>定义增加了<code>@ConditionalOnMissingBean</code>.<br></p>
<blockquote>
<p>定义位于<code>org.springframework.cloud.gateway.config.GatewayAutoConfiguration</code>中.<br>
<code>RoutePredicateHandlerMapping</code>是<code>HandlerMapping</code>的实现, 对于注册到容器中的<code>HandlerMapping</code>, <code>spring-mvc-reactive</code>
会自动调用这些类的方法来尝试处理请求.</p>
</blockquote>
<p>由于多出了<code>@ConditionalOnMissingBean</code>这会导致框架内置的和自定义的<code>RoutePredicateHandlerMapping</code>出现互斥的问题, 即只会被注册一次.</p>
<p>但是由于重写的方法只实现了部分自定义的转发规则, 从而导致<code>spring.cloud.gateway.routes</code>中定义的转发规则失效.</p>
<p>3.0.2中的Bean定义如下:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RoutePredicateHandlerMapping</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">routePredicateHandlerMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">FilteringWebHandler</span><span class="token plain"> webHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">																 </span><span class="token class-name">RouteLocator</span><span class="token plain"> routeLocator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">GlobalCorsProperties</span><span class="token plain"> globalCorsProperties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Environment</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RoutePredicateHandlerMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">webHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> routeLocator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> globalCorsProperties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>3.4.0中的Bean定义如下:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@ConditionalOnMissingBean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RoutePredicateHandlerMapping</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">routePredicateHandlerMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">FilteringWebHandler</span><span class="token plain"> webHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">																 </span><span class="token class-name">RouteLocator</span><span class="token plain"> routeLocator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">GlobalCorsProperties</span><span class="token plain"> globalCorsProperties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Environment</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">RoutePredicateHandlerMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">webHandler</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> routeLocator</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> globalCorsProperties</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> environment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/08/troubleshooting-and-solutions-encountered-during-the-upgrade-process-of-spring-cloud-gateway-to-version-4.1.0#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>修改继承类重写的<code>protected Mono&lt;Route&gt; lookupRoute(ServerWebExchange exchange)</code>方法的实现, 先调用父类的方法, 如果父类方法返回为空,
则执行自定义的转发规则以确保<code>spring.cloud.gateway.routes</code>中定义的转发规则生效.</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">protected</span><span class="token plain"> </span><span class="token class-name">Mono</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Route</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">lookupRoute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">ServerWebExchange</span><span class="token plain"> exchange</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">lookupRoute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">exchange</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">switchIfEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Mono</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">defer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">// 此处为自定义的转发规则</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content:encoded>
            <category>troubleshooting</category>
            <category>spring</category>
            <category>spring-cloud</category>
            <category>spring-cloud-gateway</category>
        </item>
        <item>
            <title><![CDATA[升级grafana过程中遇到的问题的以及对应修复方案]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/04/07/upgrading-grafana-issues-and-fixes</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/04/07/upgrading-grafana-issues-and-fixes</guid>
            <pubDate>Sun, 07 Apr 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[访问grafana报错403 origin not allowed]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="访问grafana报错403-origin-not-allowed">访问grafana报错403 origin not allowed<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/07/upgrading-grafana-issues-and-fixes#%E8%AE%BF%E9%97%AEgrafana%E6%8A%A5%E9%94%99403-origin-not-allowed" class="hash-link" aria-label="访问grafana报错403 origin not allowed的直接链接" title="访问grafana报错403 origin not allowed的直接链接">​</a></h2>
<p>这个issue<a href="https://github.com/grafana/grafana/issues/45117" target="_blank" rel="noopener noreferrer">Unable to Create/Save Dashboard after v8.3.5 Update</a>
提到了403问题的解决方案, 这个问题是grafana新版本引入了<code>breaking change</code>, 如果请求的<code>host</code>
和配置中的<code>server.domian</code>不匹配, 则会返回403.<br></p>
<p>这个问题通常是<code>reverse proxy</code>的问题, <code>reverse proxy</code>转发时会丢失原始的客户端请求的<code>host</code>信息, 传递的<code>host</code>
信息为<code>reverse proxy</code>代理规则中对应的<code>host</code>信息(通常是内网的hostname).</p>
<p>解决方案是修改<code>reverse proxy</code>的配置, 在转发时将<code>host</code>替换为<code>grafana</code>中配置的<code>server.domain</code>即可</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="dashboard中依赖的panel组件过时">dashboard中依赖的panel组件过时<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/07/upgrading-grafana-issues-and-fixes#dashboard%E4%B8%AD%E4%BE%9D%E8%B5%96%E7%9A%84panel%E7%BB%84%E4%BB%B6%E8%BF%87%E6%97%B6" class="hash-link" aria-label="dashboard中依赖的panel组件过时的直接链接" title="dashboard中依赖的panel组件过时的直接链接">​</a></h2>
<p>当<code>dashboard</code>中依赖的<code>panel</code>过时时, panel上会有警告图标提示需要更新, 解决方案是在<code>Dashboard</code>管理界面中点击<code>panel</code>
的<code>edit</code>按钮, 替换为最新的<code>panel</code>组件, 然后保存<code>dashboard</code>即可.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/04/07/upgrading-grafana-issues-and-fixes#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h2>
<ul>
<li><a href="https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#cookie_samesite" target="_blank" rel="noopener noreferrer">Configure Grafana</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>grafana</category>
            <category>component-upgrade</category>
        </item>
        <item>
            <title><![CDATA[Gnome桌面环境启用Wayland]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland</guid>
            <pubDate>Wed, 27 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[默认情况下, Gnome桌面环境使用的协议是X11协议.]]></description>
            <content:encoded><![CDATA[<p>默认情况下, Gnome桌面环境使用的协议是<code>X11</code>协议. <br>
<code>Wayland</code>是<code>X11</code>的替代品, 可以提供更好的性能和体验.(绘图在Client侧而不是像<code>X11</code>一样由<code>XServer</code>负责).<br>
下面将介绍如何启用<code>Wayland</code>协议.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="确认当前的通信协议">确认当前的通信协议<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E7%A1%AE%E8%AE%A4%E5%BD%93%E5%89%8D%E7%9A%84%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE" class="hash-link" aria-label="确认当前的通信协议的直接链接" title="确认当前的通信协议的直接链接">​</a></h2>
<p>执行以下命令, 确认当前的通信协议:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo $XDG_SESSION_TYPE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当输出结果为<code>x11</code>时, 说明当前使用的是<code>X11</code>协议.
如果输出结果为<code>wayland</code>时, 说明当前使用的是<code>Wayland</code>协议, 不需要做任何操作.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="修改配置文件">修改配置文件<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" class="hash-link" aria-label="修改配置文件的直接链接" title="修改配置文件的直接链接">​</a></h2>
<p>执行以下命令, 修改配置文件:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo vim /etc/gdm3/custom.conf</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>将配置文件中的<code>WaylandEnable=false</code>改为<code>WaylandEnable=true</code></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="重启gdm服务并进入桌面">重启gdm服务并进入桌面<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E9%87%8D%E5%90%AFgdm%E6%9C%8D%E5%8A%A1%E5%B9%B6%E8%BF%9B%E5%85%A5%E6%A1%8C%E9%9D%A2" class="hash-link" aria-label="重启gdm服务并进入桌面的直接链接" title="重启gdm服务并进入桌面的直接链接">​</a></h2>
<p>执行以下命令, 重启gdm服务:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart gdm</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当<code>gdm</code>服务重启后, 当前登录的会话会退出, 需要重新登录, 登录时选择<code>Wayland</code>登录方式即可.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="验证">验证<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E9%AA%8C%E8%AF%81" class="hash-link" aria-label="验证的直接链接" title="验证的直接链接">​</a></h2>
<p>执行以下命令, 验证是否启用Wayland:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">echo $XDG_SESSION_TYPE</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>当输出结果为<code>wayland</code>时, 说明启用Wayland成功.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="应用wayland支持">应用<code>Wayland</code>支持<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%BA%94%E7%94%A8wayland%E6%94%AF%E6%8C%81" class="hash-link" aria-label="应用wayland支持的直接链接" title="应用wayland支持的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="chrome">Chrome<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#chrome" class="hash-link" aria-label="Chrome的直接链接" title="Chrome的直接链接">​</a></h3>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">com.google.Chrome --ozone-platform=wayland</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><a href="https://www.reddit.com/r/linux/comments/1c63fgz/latest_update_of_chrome_on_wayland/" target="_blank" rel="noopener noreferrer">Latest update of chrome on Wayland</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="vscode">VsCode<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#vscode" class="hash-link" aria-label="VsCode的直接链接" title="VsCode的直接链接">​</a></h3>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">code --ozone-platform=wayland</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://linuxconfig.org/how-to-enable-disable-wayland-on-ubuntu-22-04-desktop" target="_blank" rel="noopener noreferrer">How to enable/disable wayland on Ubuntu 22.04 Desktop</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="update-2024-03-28-inteilij-idea目前对wayland的原生支持还在进行中">Update 2024-03-28 (<code>InteiliJ IDEA</code>目前对<code>Wayland</code>的原生支持还在进行中)<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#update-2024-03-28-inteilij-idea%EF%BF%BD%EF%BF%BD%E7%9B%AE%E5%89%8D%E5%AF%B9wayland%E7%9A%84%E5%8E%9F%E7%94%9F%E6%94%AF%E6%8C%81%E8%BF%98%E5%9C%A8%E8%BF%9B%E8%A1%8C%E4%B8%AD" class="hash-link" aria-label="update-2024-03-28-inteilij-idea目前对wayland的原生支持还在进行中的直接链接" title="update-2024-03-28-inteilij-idea目前对wayland的原生支持还在进行中的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wayland的支持不足"><code>Wayland</code>的支持不足<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#wayland%E7%9A%84%E6%94%AF%E6%8C%81%E4%B8%8D%E8%B6%B3" class="hash-link" aria-label="wayland的支持不足的直接链接" title="wayland的支持不足的直接链接">​</a></h3>
<p><code>InteiliJ IDEA</code>对<code>Wayland</code>的支持不足, 其底层基于<code>Java</code>的<code>Swing</code>实现图形渲染, 但是目前<code>Swing</code>还是基于<code>X11</code>协议, 因此无法使用
<code>Wayland</code>协议,
会导致系统使用<code>XWayland</code>来模拟<code>X11</code>协议, 从而影响其性能,
主要的影响是:</p>
<ul>
<li>打字输入的渲染会比较卡顿</li>
<li>应用内部窗口初始化时会出现短暂的黑色背景</li>
<li>编辑器滑动会比较卡顿不够流畅</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="jetbrains对wayland的支持仍在继续"><code>Jetbrains</code>对<code>Wayland</code>的支持仍在继续<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#jetbrains%E5%AF%B9wayland%E7%9A%84%E6%94%AF%E6%8C%81%E4%BB%8D%E5%9C%A8%E7%BB%A7%E7%BB%AD" class="hash-link" aria-label="jetbrains对wayland的支持仍在继续的直接链接" title="jetbrains对wayland的支持仍在继续的直接链接">​</a></h3>
<p><code>Jetbrains</code>去年发布过一个博客, 该博客详细介绍了基于<code>IDE</code>对<code>Wayland</code>的支持.<br>
<a href="https://blog.jetbrains.com/platform/2023/08/wayland-support/" target="_blank" rel="noopener noreferrer">Wayland Support for IntelliJ-based IDEs</a><br>
该博客中首先对<code>Wayland</code>作出了介绍, 以及目前<code>Java</code>对<code>Wayland</code>的支持现状由于历史的原因, <code>Java</code>尚未支持<code>Wayland</code>而是采用
<code>Xwayland</code>兼容性过渡方案.<br>
其次介绍了目前对于<code>Java</code>原生<code>Wayland</code>支持的挑战.<br>
最后是对未来支持<code>Wayland</code>的展望.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="openjdk-project-wakefield">OpenJDK Project Wakefield<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#openjdk-project-wakefield" class="hash-link" aria-label="OpenJDK Project Wakefield的直接链接" title="OpenJDK Project Wakefield的直接链接">​</a></h3>
<p><code>OpenJDK</code>中的<code>Wakefield</code>项目致力于解决让在<code>JDK</code>中实现<code>Wayland display server</code>的支持<br></p>
<p><strong>该项目有中短期和中长期两个目标:</strong></p>
<blockquote>
<p>短期到中期解决方案:<br>
a short to medium term solution for JDK running on Wayland in X11 compatibility mode.<br>
JDK在X11兼容模式下运行在Wayland上.<br></p>
</blockquote>
<blockquote>
<p>中期到长期解决方案:<br>
a medium to long term solution for JDK running as a native Wayland client. Pure Wayland toolkit plan proposal.<br>
JDK作为原生Wayland客户端, 需要一个纯Wayland工具包方案.<br></p>
</blockquote>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h3>
<ul>
<li><a href="https://wiki.openjdk.org/display/wakefield" target="_blank" rel="noopener noreferrer">OpenJDK Project Wakefield - Wayland desktop support for JDK on Linux</a></li>
<li><a href="https://cr.openjdk.org/~prr/javaone/2022/wakefield/wakefield_bof.pdf" target="_blank" rel="noopener noreferrer">Project Wakefield: A New Wayland Desktop for Java On Linux</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="update-2024-06-04-启用inteilij-idea对wayland的原生支持">Update 2024-06-04 (启用<code>InteiliJ IDEA</code>对<code>Wayland</code>的原生支持)<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#update-2024-06-04-%E5%90%AF%E7%94%A8inteilij-idea%E5%AF%B9wayland%E7%9A%84%E5%8E%9F%E7%94%9F%E6%94%AF%E6%8C%81" class="hash-link" aria-label="update-2024-06-04-启用inteilij-idea对wayland的原生支持的直接链接" title="update-2024-06-04-启用inteilij-idea对wayland的原生支持的直接链接">​</a></h2>
<p><code>InteiliJ IDEA</code>底层的<code>Runtime</code>正在支持<code>Wayland</code>, 可以通过修改<code>Java Runtime</code>来启用<code>Wayland</code>原生支持, 启用后<code>UI</code>交互相较于
<code>XWayland</code>会比较流畅</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="已知问题">已知问题<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%B7%B2%E7%9F%A5%E9%97%AE%E9%A2%98" class="hash-link" aria-label="已知问题的直接链接" title="已知问题的直接链接">​</a></h3>
<p>启用后会有一些问题, 例如:</p>
<ul>
<li>Cannot use the input method (fcitx) to input chinese characters.</li>
<li>Cannot open dialog for renaming files.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="启用步骤">启用步骤<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%90%AF%E7%94%A8%E6%AD%A5%E9%AA%A4" class="hash-link" aria-label="启用步骤的直接链接" title="启用步骤的直接链接">​</a></h3>
<ol>
<li>进入<a href="https://github.com/JetBrains/JetBrainsRuntime/releases" target="_blank" rel="noopener noreferrer">Releases</a>下载最新的<code>JetBrains Runtime</code></li>
<li>修改<code>idea64.vmoptions</code>增加以下内容</li>
</ol>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.io=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-ea \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">-Dawt.toolkit.name=WLToolkit \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.lang=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.lang.ref=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.lang.reflect=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.net=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.nio=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.nio.charset=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.text=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.time=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.util=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.util.concurrent=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/jdk.internal.vm=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/sun.nio.ch=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/sun.nio.fs=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/sun.security.ssl=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/sun.security.util=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.base/sun.net.dns=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/com.sun.java.swing.plaf.gtk=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt.dnd.peer=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt.event=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt.image=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/java.awt.font=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/javax.swing=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/javax.swing.plaf.basic=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/javax.swing.text.html=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.awt.X11=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.awt.wl=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.awt.datatransfer=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.awt=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.font=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.java2d=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=java.desktop/sun.swing=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=jdk.attach/sun.tools.attach=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--add-opens=jdk.jdi/com.sun.tools.jdi=ALL-UNNAMED com.intellij.idea.Main</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol start="3">
<li>在<code>IDEA</code>内进入<code>Choose Boot Java Runtime for the IDE</code>修改<code>Runtime</code>为新下载的包.</li>
<li>重启<code>IDEA</code></li>
<li>启动后执行<code>xlsclients</code>检查<code>IDEA</code>是否运行在<code>X</code>模式下, 进程名为<code>java</code></li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考-1">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/27/gnome-desktop-environment-enabling-wayland#%E5%8F%82%E8%80%83-1" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h3>
<ul>
<li><a href="https://github.com/JetBrains/JetBrainsRuntime/issues/242" target="_blank" rel="noopener noreferrer">testing wayland</a></li>
</ul>]]></content:encoded>
            <category>linux</category>
            <category>wayland</category>
            <category>gnome</category>
        </item>
        <item>
            <title><![CDATA[使用apache-httpclient5并通过DNS请求服务如果域名不符合FQDN规范导致报错NullPointerException的问题的排查及修复]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn</guid>
            <pubDate>Fri, 15 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[此问题是升级apache-httpclient5过程中遇到的问题.]]></description>
            <content:encoded><![CDATA[<p>此问题是升级apache-httpclient5过程中遇到的问题.<br></p>
<p>项目是多租户场景, 每个租户都有自己的服务, 所有服务部署在<code>kubernetes</code>上.<br>
每个租户的服务在独立的<code>namespace</code>中 <code>namespace</code>是租户的<code>ID</code>(例如<code>1663783236729442304</code>)</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="现象">现象<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn#%E7%8E%B0%E8%B1%A1" class="hash-link" aria-label="现象的直接链接" title="现象的直接链接">​</a></h3>
<p>业务服务通过<code>feign</code>(底层采用<code>httpclient5</code>)调用租户服务时报错, 错误日志如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">java.lang.NullPointerException: Host name</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base/java.util.Objects.requireNonNull(Objects.java:259)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.apache.hc.core5.util.Args.notNull(Args.java:169)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.apache.hc.core5.util.Args.containsNoBlanks(Args.java:88)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.apache.hc.core5.http.HttpHost.&lt;init&gt;(HttpHost.java:84)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.apache.hc.core5.http.HttpHost.&lt;init&gt;(HttpHost.java:104)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.apache.hc.core5.http.HttpHost.create(HttpHost.java:168)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at feign.hc5.ApacheHttp5Client.execute(ApacheHttp5Client.java:84)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at feign.micrometer.MicrometerObservationCapability.lambda$enrich$1(MicrometerObservationCapability.java:53)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:100)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="原因">原因<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn#%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="原因的直接链接" title="原因的直接链接">​</a></h3>
<p>访问租户服务时, 通过<code>DNS</code>请求服务, 格式为<code>&lt;service-name&gt;.&lt;tenant-id&gt;</code>.<br>
上述格式组成的域名不符合<code>FQDN</code>规范(以<code>.</code>进行分割的列表最后部分的内容为<code>&lt;tenant-id&gt;</code>, 必须以字母开头)</p>
<p><code>httpclient5</code>内部解析<code>URI</code>时使用的是<code>java.net.URI#create</code>方法进行解析,
由于<code>hostname</code>部分不符合规范,
会导致返回的<code>URI</code>对象获取的<code>host</code>值为<code>null</code>, 从而导致出现<code>NullPointerException</code></p>
<p>例如上述代码</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> uri </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> URI</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"http://servicea.1663783236729442304/api/v1/tasks"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">host</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其控制台输出为<code>null</code></p>
<p><code>URI</code>内部解析hostname代码如下</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// hostname      = domainlabel [ "." ] | 1*( domainlabel "." ) toplabel [ "." ]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// toplabel      = alpha | alpha *( alphanum | "-" ) alphanum</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">//</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">private</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">parseHostname</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> start</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">boolean</span><span class="token plain"> skipParseException</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">URISyntaxException</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> start</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> l </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain">                 </span><span class="token comment" style="color:#999988;font-style:italic">// Start of last parsed label</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">do</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// domainlabel = alphanum [ *( alphanum | "-" ) alphanum ]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		q </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">L_ALPHANUM</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">H_ALPHANUM</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">q </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		l </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		q </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">L_ALPHANUM</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">L_DASH</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">H_ALPHANUM</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">H_DASH</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">q </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">charAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">q </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token char">'-'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">fail</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Illegal character in hostname"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> q </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		q </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">scan</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token char">'.'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">q </span><span class="token operator" style="color:#393A34">&lt;=</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">break</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		p </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> q</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">at</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">p</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> n</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token char">':'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">skipParseException</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">fail</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Illegal character in hostname"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">failExpecting</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hostname"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> start</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// for a fully qualified hostname check that the rightmost</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">// label starts with an alpha character.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> start </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token function" style="color:#d73a49">match</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">charAt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">L_ALPHA</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">H_ALPHA</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">fail</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Illegal character in hostname"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> l</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	host </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> input</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">start</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> p</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中可以看到如下注释</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">// for a fully qualified hostname check that the rightmost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// label starts with an alpha character.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在<code>RFC 1035</code>中对<code>Domain names</code>进行了规范
其中第<code>2.3.1</code>有相关定义</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">&lt;domain&gt; ::= &lt;subdomain&gt; | " "</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;subdomain&gt; ::= &lt;label&gt; | &lt;subdomain&gt; "." &lt;label&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;label&gt; ::= &lt;letter&gt; [ [ &lt;ldh-str&gt; ] &lt;let-dig&gt; ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;ldh-str&gt; ::= &lt;let-dig-hyp&gt; | &lt;let-dig-hyp&gt; &lt;ldh-str&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;let-dig-hyp&gt; ::= &lt;let-dig&gt; | "-"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;let-dig&gt; ::= &lt;letter&gt; | &lt;digit&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;letter&gt; ::= any one of the 52 alphabetic characters A through Z in</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">upper case and a through z in lower case</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">&lt;digit&gt; ::= any one of the ten digits 0 through 9</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>domain</code>由<code>subdomain</code>组成, <code>subdomain</code>的尾部由<code>label</code>组成, <code>label</code>的开头必须为<code>letter</code>(即字母)</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>kubernetes</code>中支持<code>&lt;service-name&gt;.&lt;tenant-id&gt;.svc.cluster.local</code>这种域名,
将客户端请求方式从<code>&lt;service-name&gt;.&lt;tenant-id&gt;</code>改为上述格式即可</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/15/troubleshooting-and-fixing-null-pointer-exception-when-using-apache-httpclient5-for-dns-requests-for-services-with-non-compliant-fqdn#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h3>
<ul>
<li><a href="https://datatracker.ietf.org/doc/html/rfc1035#section-2.3.1" target="_blank" rel="noopener noreferrer">RFC 1035</a></li>
<li><a href="https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/" target="_blank" rel="noopener noreferrer">DNS for Services and Pods</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>java</category>
            <category>kotlin</category>
            <category>FQDN</category>
        </item>
        <item>
            <title><![CDATA[kopia接入火山云TOS报错Access Denied问题的排查及修复]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2024/03/14/kopia-integration-with-volcano-cloud-tos-access-denied-issue-investigation-and-fix</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2024/03/14/kopia-integration-with-volcano-cloud-tos-access-denied-issue-investigation-and-fix</guid>
            <pubDate>Thu, 14 Mar 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[kopia是一个备份工具, 支持多种存储后端, 包括对象存储, 文件系统等,]]></description>
            <content:encoded><![CDATA[<p><code>kopia</code>是一个备份工具, 支持多种存储后端, 包括<code>对象存储</code>, <code>文件系统</code>等,
通过kopia可以将数据备份到不同的存储后端, 也可以从不同的存储后端恢复数据.
火山云<code>TOS</code>是火山云提供的对象存储服务, 支持通过<code>S3</code>协议访问.
最近在使用kopia接入火山云<code>TOS</code>时, 遇到了一个问题, 问题的现象是调用<code>kopia</code>提供的<code>s3_storage</code>接入火山云TOS时, 报错
<code>Access Denied.</code></p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">unable to determine if bucket "xxxxx" exists: Access Denied.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>以下是该问题的原因及解决方案总结.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/14/kopia-integration-with-volcano-cloud-tos-access-denied-issue-investigation-and-fix#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<p>火山云对<code>S3</code>协议只有部分实现.
以请求方式为例, 只支持<code>Virtual Hosted-Style</code>的请求方式, 不支持<code>Path-Style</code>的请求方式.</p>
<blockquote>
<p>上述两种请求方式主要用于区分对不同的存储桶进行操作.
<code>Virtual Hosted-Style</code>:
这种请求方式是通过在域名中指定存储桶名称来进行操作, 如<code>https://{bucket-name}.s3.{region-code}.amazonaws.com</code>.
<code>Path-Style</code>:
这种请求方式是通过在域名后面指定存储桶名称来进行操作, 如`<a href="https://s3.{region-code}.amazonaws.com/%7Bbucket-name%7D" target="_blank" rel="noopener noreferrer">https://s3.{region-code}.amazonaws.com/{bucket-name}</a></p>
</blockquote>
<p><code>kopia</code>通过<code>minio</code>实现了对<code>S3</code>协议的支持, <code>minio</code>中默认情况下使用<code>Path-Style</code>的请求方式,
所以导致了<code>Access Denied</code>的问题.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/14/kopia-integration-with-volcano-cloud-tos-access-denied-issue-investigation-and-fix#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p><code>minio</code>在创建<code>client</code>的时候提供了<code>BucketLookup</code>选项, 用于指定<code>client</code>使用的请求方式, 但是<code>kopia</code>没有暴露这个选项.<br>
目前已在<code>kopia</code>的<code>repo</code>中开了一个<a href="https://github.com/kopia/kopia/issues/3734" target="_blank" rel="noopener noreferrer">issue</a>, 需要等待后续的进展.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="https://www.geek66.cyou/zh-CN/blog/2024/03/14/kopia-integration-with-volcano-cloud-tos-access-denied-issue-investigation-and-fix#%E5%8F%82%E8%80%83" class="hash-link" aria-label="参考的直接链接" title="参考的直接链��接">​</a></h2>
<ul>
<li>
<p><a href="https://github.com/kopia/kopia" target="_blank" rel="noopener noreferrer">kopia</a></p>
</li>
<li>
<p><a href="https://www.volcengine.com/docs/6349" target="_blank" rel="noopener noreferrer">TOS</a></p>
</li>
<li>
<p><a href="https://www.volcengine.com/docs/6349/147050" target="_blank" rel="noopener noreferrer">AWS S3 协议兼容性说明</a></p>
</li>
</ul>
<blockquote>
<p>TOS 仅支持使用虚拟主机（即 VirtualHostStyle）的请求方式，不支持路径样式（即 PathStyle）的请求方式。因此使用各种支持 S3 协议的
SDK 和工具访问 TOS 时，请务必确保配置了 VirtualHostStyle 的请求方式。例如，使用 AWS S3 Java SDK 时，需要在客户端初始化时确保设置了禁用
PathStyle 的配置参数：AmazonS3Builder.withPathStyleAccessEnabled(false)。</p>
</blockquote>
<ul>
<li>
<p><a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html?spm=a2c4g.11186623.0.0.6b9d64012JMDoP" target="_blank" rel="noopener noreferrer">Virtual hosting of buckets</a></p>
</li>
<li>
<p><a href="https://github.com/kopia/kopia/issues/3734" target="_blank" rel="noopener noreferrer">Custmize minio creation options</a></p>
</li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>golang</category>
            <category>kopia</category>
            <category>volcengine</category>
            <category>tos</category>
            <category>s3</category>
        </item>
        <item>
            <title><![CDATA[升级框架后发现Feign调用失败时间格式化问题的排查和解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem</guid>
            <pubDate>Fri, 22 Dec 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[问题现象]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题现象">问题现象<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E7%8E%B0%E8%B1%A1" class="hash-link" aria-label="问题现象的直接链接" title="问题现象的直接链接">​</a></h2>
<p>升级内部框架版本后，发现Feign调用失败，报错如下：</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Failed to convert value of type 'java.lang.String' to required type 'java.time.ZonedDateTime'; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nested exception is org.springframework.core.convert.ConversionFailedException: </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.ZonedDateTime] for value '2023/12/18 02:57'; </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	nested exception is java.lang.IllegalArgumentException: Parse attempt failed for value [2023/12/18 02:57]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>客户端伪代码如下:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">FeignClient</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@GetMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">List</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">PlatformStandardOrderDto</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> startTime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> endTime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个问题的现象是Feign调用时参数中的<code>ZonedDatetime</code>类型的时间格式化的结果服务端无法解析</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h2>
<blockquote>
<p>框架升级前后内部的时间格式化行为发生了变化导致这个问题的出现.<br>
在早期框架中我们自定义了一个<code>SpringMvcContract</code>.</p>
</blockquote>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token annotation builtin">@Bean</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation builtin">@Primary</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">fun</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">contract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mapper</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> ObjectMapper</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> discoverer</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> DefaultParameterNameDiscoverer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> Contract </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token function" style="color:#d73a49">SpringMvcContract</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">listOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">EntityFiltersMappingParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">mapper</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> discoverer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">MatrixVariableParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">RequestHeaderParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">PathVariableParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">RequestPartParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token function" style="color:#d73a49">QueryMapParameterProcessor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<blockquote>
<p><code>SpringMvcContract</code>够帮助我们实现Feign的注解参数的解析(例如<code>@RequestParam</code>, <code>@PathVariable</code>)</p>
</blockquote>
<blockquote>
<p>框架升级前的行为:<br>
由于框架升级前的代码没有为<code>SpringMvcContract</code>配置<code>ConversionService</code>, 所以<code>SpringMvcContract</code>无法处理<code>ZonedDateTime</code>
从而导致触发了Feign的默认行为也就是调用参数的<code>toString</code>方法来将参数转为String, 对于<code>ZonedDateTime</code>类型的参数,
调用<code>toString</code>方法, 生成的字符串格式为<code>iso-8601</code>格式, 例如<code>2023-12-18T02:57:00+08:00[Asia/Shanghai]</code>,
这种格式的字符串服务端是可以解析的</p>
<p>框架升级后的行为:<br>
由于框架内部配置了<code>ConversionService</code>, 所以会调用<code>ConversionService</code>的<code>convert</code>
方法来实现将参数的解析, <code>ConversionService</code>
最终会委托<code>FormattingConversionService</code>将<code>ZonedDateTime</code>类型的参数转为字符串, 这种情况下,
会将时间转为<code>yyyy/MM/dd HH:mm</code>格式的字符串, 所以导致了服务端无法解析.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>为参数增加<code>@DateTimeFormat</code>注解来指定时间格式化的格式, 例如:</p>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">interface</span><span class="token plain"> </span><span class="token class-name">FeignClient</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token annotation punctuation" style="color:#393A34">@GetMapping</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"/"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">List</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">PlatformStandardOrderDto</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@DateTimeFormat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iso </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">DateTimeFormat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">ISO</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">DATE_TIME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> startTime</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token annotation punctuation" style="color:#393A34">@DateTimeFormat</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">iso </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">DateTimeFormat</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">ISO</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">DATE_TIME</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token annotation punctuation" style="color:#393A34">@RequestParam</span><span class="token plain"> </span><span class="token class-name">ZonedDateTime</span><span class="token plain"> endTime</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题排查过程">问题排查过程<a href="https://www.geek66.cyou/zh-CN/blog/2023/12/22/openfeign-zoned-datetime-formatting-problem#%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5%E8%BF%87%E7%A8%8B" class="hash-link" aria-label="问题排查过程的直接链接" title="问题排查过程的直接链接">​</a></h2>
<ul>
<li>当FeignClient接口的方法被调用时, 会调用<code>ReflectiveFeign</code>来委托<code>MethodHandler</code>来处理方法调用</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token plain"> proxy</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Method</span><span class="token plain"> method</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Throwable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"equals"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">Object</span><span class="token plain"> otherHandler </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					args</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token class-name">Proxy</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getInvocationHandler</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">otherHandler</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">IllegalArgumentException</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"hashCode"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">hashCode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"toString"</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">equals</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> dispatch</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">method</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中<code>dispatch</code>是用来保存方法名称和<code>MethodHandler</code>的映射关系的, <code>MethodHandler</code>是用来处理方法调用(
当前的实现中<code>MethodHandler</code>是<code>SynchronousMethodHandler</code>)</p>
<ul>
<li>MethodHandler内部的invoke执行流程如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">Object</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">invoke</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">throws</span><span class="token plain"> </span><span class="token class-name">Throwable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> buildTemplateFromArgs</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Options</span><span class="token plain"> options </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">findOptions</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Retryer</span><span class="token plain"> retryer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">retryer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">clone</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">executeAndDecode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">template</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RetryableException</span><span class="token plain"> e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				retryer</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">continueOrPropagate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">e</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">RetryableException</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token class-name">Throwable</span><span class="token plain"> cause </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getCause</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">propagationPolicy </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">UNWRAP</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> cause </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> cause</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token keyword" style="color:#00009f">throw</span><span class="token plain"> th</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">logLevel </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token class-name">Logger</span><span class="token class-name punctuation" style="color:#393A34">.</span><span class="token class-name">Level</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">NONE</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				logger</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">logRetry</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">configKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> logLevel</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">continue</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中我们需要关心的是<code>buildTemplateFromArgs.create(argv);</code>这一行,
这一行代码会根据方法的参数来构建<code>RequestTemplate</code>,
<code>RequestTemplate</code>是用来保存请求的信息的, 例如请求的URL, 请求的方法,
请求的参数等等, 只要知道了<code>RequestTemplate</code>中对应参数的构造过程那么我们就可以知道Feign是如何将参数转为请求的参数的了</p>
<ul>
<li><code>buildTemplateFromArgs.create(argv);</code>的具体实现如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token annotation punctuation" style="color:#393A34">@Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Object</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> mutable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">template</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	mutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">feignTarget</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">target</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">urlIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> urlIndex </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">urlIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token function" style="color:#d73a49">checkArgument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">urlIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"URI parameter %s was null"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> urlIndex</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		mutable</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">target</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">valueOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">urlIndex</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> varBuilder </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">LinkedHashMap</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Entry</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">Integer</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Collection</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> entry </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">indexToName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">entrySet</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">int</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Object</span><span class="token plain"> value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Null values are skipped.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">indexToExpander</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">containsKey</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">expandElements</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">indexToExpander</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">get</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">String</span><span class="token plain"> name </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getValue</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				varBuilder</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">put</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">argv</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> mutable</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> varBuilder</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queryMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// add query map parameters after initial resolve so that they take</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// precedence over any predefined values</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Object</span><span class="token plain"> value </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queryMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> queryMap </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">toQueryMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">addQueryMapQueryParameters</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryMap</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headerMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		template </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token function" style="color:#d73a49">addHeaderMapHeaders</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics class-name">Object</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> argv</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">metadata</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headerMapIndex</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> template</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码中我们需要关注的是这个语句</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">if (value != null) { // Null values are skipped.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if (indexToExpander.containsKey(i)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		value = expandElements(indexToExpander.get(i), value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	for (String name : entry.getValue()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		varBuilder.put(name, value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">private Object expandElements(Expander expander, Object value) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	if (value instanceof Iterable) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		return expandIterable(expander, (Iterable) value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return expander.expand(value);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个语句会将参数转为<code>RequestTemplate</code>中的参数, <code>Expander</code>是<code>Feign</code>中的一个接口, 用来将参数转为字符串,
而<code>indexToExpander</code>表达的是参数的索引和<code>Expander</code>的映射关系,
在我们的<code>Case</code>中实际上是没有走到<code>indexToExpander</code>的, 所以最终会直接调用<code>varBuilder.put(name, value);</code>这一行,
这一行会将参数转为<code>RequestTemplate</code>中的参数,
后续需要将参数值转为字符串, 所以还需要了解<code>RequestTemplate</code>中的参数是如何转为字符串的,
所以需要查看<code>RequestTemplate template = resolve(argv, mutable, varBuilder);</code>
这一段调用的resolve方法, 具体实现如下:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">protected RequestTemplate resolve(Object[] argv,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								  RequestTemplate mutable,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">								  Map&lt;String, Object&gt; variables) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	return mutable.resolve(variables);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>接下来需要查看<code>RequestTemplate</code>中的<code>resolve</code>方法的实现, 具体实现如下:</li>
</ul>
<div class="language-java codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-java codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">resolve</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Map</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">String</span><span class="token generics punctuation" style="color:#393A34">,</span><span class="token generics"> </span><span class="token generics operator" style="color:#393A34">?</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">StringBuilder</span><span class="token plain"> uri </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">StringBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* create a new template form this one, but explicitly */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">RequestTemplate</span><span class="token plain"> resolved </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">RequestTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">from</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/* create a new uri template using the default root */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token class-name">UriTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">""</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">decodeSlash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">charset</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token class-name">String</span><span class="token plain"> expanded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">uriTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expanded </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">expanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * for simplicity, combine the queries into the uri and use the resulting uri to seed the</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 * resolved template.</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">	 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queries</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * since we only want to keep resolved query values, reset any queries on the resolved copy</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">queries</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">emptyMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">StringBuilder</span><span class="token plain"> query </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">StringBuilder</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">Iterator</span><span class="token generics punctuation" style="color:#393A34">&lt;</span><span class="token generics class-name">QueryTemplate</span><span class="token generics punctuation" style="color:#393A34">&gt;</span><span class="token plain"> queryTemplates </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">queries</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">iterator</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">QueryTemplate</span><span class="token plain"> queryTemplate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">next</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">String</span><span class="token plain"> queryExpanded </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> queryTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Util</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isNotBlank</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryExpanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryExpanded</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryTemplates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">hasNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token class-name">String</span><span class="token plain"> queryString </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> query</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">queryString</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">Matcher</span><span class="token plain"> queryMatcher </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">QUERY_STRING_PATTERN</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">matcher</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uri</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryMatcher</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">find</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">/* the uri already has a query, so any additional queries should be appended */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&amp;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"?"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">append</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">queryString</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* add the uri to result */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">uri</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uri</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* headers */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * same as the query string, we only want to keep resolved values, so clear the header map on</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 * the resolved instance</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">		 */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">headers</span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">Collections</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">emptyMap</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token keyword" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token class-name">HeaderTemplate</span><span class="token plain"> headerTemplate </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">headers</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">values</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token comment" style="color:#999988;font-style:italic">/* resolve the header */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token class-name">String</span><span class="token plain"> header </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> headerTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">/* split off the header values and add it to the resolved template */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token class-name">String</span><span class="token plain"> headerValues </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">substring</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">header</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">indexOf</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" "</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">!</span><span class="token plain">headerValues</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">isEmpty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token comment" style="color:#999988;font-style:italic">/* append the header as a new literal as the value has already been expanded. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">header</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">headerTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">getName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token class-name">Literal</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">create</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">headerValues</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bodyTemplate </span><span class="token operator" style="color:#393A34">!=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">body</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">bodyTemplate</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">expand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">variables</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token comment" style="color:#999988;font-style:italic">/* mark the new template resolved */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	resolved</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">resolved </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	</span><span class="token keyword" style="color:#00009f">return</span><span class="token plain"> resolved</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述代码比较长, 我们需要关注的是这一段:</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">	if (!this.queries.isEmpty()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      /*</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       * since we only want to keep resolved query values, reset any queries on the resolved copy</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      resolved.queries(Collections.emptyMap());</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      StringBuilder query = new StringBuilder();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      Iterator&lt;QueryTemplate&gt; queryTemplates = this.queries.values().iterator();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      while (queryTemplates.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        QueryTemplate queryTemplate = queryTemplates.next();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        String queryExpanded = queryTemplate.expand(variables);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (Util.isNotBlank(queryExpanded)) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          query.append(queryExpanded);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          if (queryTemplates.hasNext()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            query.append("&amp;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      String queryString = query.toString();</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      if (!queryString.isEmpty()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        Matcher queryMatcher = QUERY_STRING_PATTERN.matcher(uri);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        if (queryMatcher.find()) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          /* the uri already has a query, so any additional queries should be appended */</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          uri.append("&amp;");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        } else {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          uri.append("?");</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        uri.append(queryString);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>最终这个语句<code>String queryExpanded = queryTemplate.expand(variables);</code>会将参数转为字符串, 所以最终我们得到了参数的字符串形式,</p>]]></content:encoded>
            <category>troubleshooting</category>
            <category>spring-cloud</category>
            <category>spring-cloud-openfeign</category>
            <category>openfeign</category>
        </item>
        <item>
            <title><![CDATA[升级到spring-boot-3.1.0后native-image启动报错以及问题解决]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions</guid>
            <pubDate>Thu, 01 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[本文主要介绍升级到spring-boot-3.1.0后native-image启动报错以及对应问题的解决方案]]></description>
            <content:encoded><![CDATA[<p>本文主要介绍升级到spring-boot-3.1.0后native-image启动报错以及对应问题的解决方案</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-no-classes-have-been-predefined-during-the-image-build-to-load-from-bytecodes-at-runtime">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-no-classes-have-been-predefined-during-the-image-build-to-load-from-bytecodes-at-runtime" class="hash-link" aria-label="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.的直接链接" title="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.的直接链接">​</a></h2>
<p>日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': No classes have been predefined during the image build to load from bytecodes at runtime.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1156) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[fastone-auditing:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.fastonetech.auditing.FastoneAuditingApplicationKt.main(FastoneAuditingApplication.kt:13) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.fastonetech.auditing.FastoneAuditingApplicationKt.main(FastoneAuditingApplication.kt) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: No classes have been predefined during the image build to load from bytecodes at runtime.</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:89) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.hub.PredefinedClassesSupport.throwNoBytecodeClasses(PredefinedClassesSupport.java:76) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.graalvm.nativeimage.builder/com.oracle.svm.core.hub.PredefinedClassesSupport.loadClass(PredefinedClassesSupport.java:130) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.lang.ClassLoader.defineClass(ClassLoader.java:294) ~[fastone-auditing:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1383) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$InvokerCreationAction.run(JavaDispatcher.java:459) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher$InvokerCreationAction.run(JavaDispatcher.java:452) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.security.AccessController.executePrivileged(AccessController.java:168) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at java.base@17.0.5/java.security.AccessController.doPrivileged(AccessController.java:318) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher.doPrivileged(JavaDispatcher.java) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:87) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8659) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at net.bytebuddy.matcher.ElementMatchers.isFinalizer(ElementMatchers.java:1624) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState$ProxyDefinitionHelpers.&lt;init&gt;(ByteBuddyState.java:296) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.ByteBuddyState.&lt;clinit&gt;(ByteBuddyState.java:71) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.&lt;init&gt;(BytecodeProviderImpl.java:123) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.&lt;init&gt;(BytecodeProviderImpl.java:115) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.BytecodeProviderInitiator.buildBytecodeProvider(BytecodeProviderInitiator.java:59) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.bytecode.internal.BytecodeProviderInitiator.buildDefaultBytecodeProvider(BytecodeProviderInitiator.java:46) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.internal.enhance.EnhancingClassTransformerImpl.&lt;init&gt;(EnhancingClassTransformerImpl.java:34) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.PersistenceUnitInfoDescriptor.pushClassTransformer(PersistenceUnitInfoDescriptor.java:113) ~[fastone-auditing:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.&lt;init&gt;(EntityManagerFactoryBuilderImpl.java:340) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.&lt;init&gt;(EntityManagerFactoryBuilderImpl.java:190) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:60) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[fastone-auditing:6.0.9]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 17 common frames omitted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h3>
<p>这个问题是<code>springframework</code>和<code>hibernate</code>之间的集成问题, 需要将<code>springframework</code>升级到<code>6.0.10-SNAPSHOT</code>版本即可解决该问题
详细<code>issue</code>
见<a href="https://github.com/spring-projects/spring-framework/issues/30492" target="_blank" rel="noopener noreferrer">Skip class transformer in PersistenceUnitInfoDescriptor for native images #30492</a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>现在在写解决方案的时候, <code>springframework</code>的最新版本是<code>6.0.9</code>, 如果后续<code>6.0.10</code>版本发布, 则可以直接使用<code>6.0.10</code>版本.</p></div></div>
<p>将<code>springframework</code>升级到<code>6.0.10-SNAPSHOT</code>版本, 该版本中修复了<code>hibernate</code>的集成问题.</p>
<div class="language-kotlin codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-kotlin codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">implementation</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">platform</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string-literal singleline string" style="color:#e3116c">"org.springframework:spring-framework-bom:6.0.10-SNAPSHOT"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-null">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#orgspringframeworkbeansfactorybeancreationexception-error-creating-bean-with-name-entitymanagerfactory-null" class="hash-link" aria-label="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null的直接链接" title="org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null的直接链接">​</a></h2>
<p>日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory': null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1156) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:931) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:608) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[springboot3-todo:3.1.0]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at com.example.Application.main(Application.java:16) ~[springboot3-todo:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: java.lang.ExceptionInInitializerError: null</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.logSelectedDialect(DialectFactoryImpl.java:93) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:88) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:224) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:34) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:119) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:264) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:239) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:216) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.model.relational.Database.&lt;init&gt;(Database.java:45) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:229) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.&lt;init&gt;(InFlightMetadataCollectorImpl.java:197) ~[springboot3-todo:6.2.2.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:166) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1380) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1451) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:74) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[springboot3-todo:6.0.10-SNAPSHOT]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 16 common frames omitted</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: java.lang.IllegalArgumentException: Invalid logger interface org.hibernate.dialect.DialectLogging (implementation not found in jdk.internal.loader.ClassLoaders$AppClassLoader@3ecf72fd)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.doGetMessageLogger(Logger.java:2564) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.getMessageLogger(Logger.java:2530) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.jboss.logging.Logger.getMessageLogger(Logger.java:2516) ~[springboot3-todo:3.5.0.Final]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        at org.hibernate.dialect.DialectLogging.&lt;clinit&gt;(DialectLogging.java:31) ~[na:na]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ... 37 common frames omitted</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="问题原因-1">问题原因<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E9%97%AE%E9%A2%98%E5%8E%9F%E5%9B%A0-1" class="hash-link" aria-label="问题原因的直接链接" title="问题原因的直接链接">​</a></h3>
<p>这个问题是<code>hibernate</code>中涉及到反射调用的相关的类没有注册到<code>reflect-config.json</code>中导致的.</p>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p>现在在写这篇文章的时候,<code>org.graalvm.buildtools.native</code>的插件使用的<code>metadataRepository</code>的版本还是<code>0.3.0</code>.
这个版本中还没有为<code>hibernate</code>相关的类注册到<code>reflect-config.json</code>中, 如果后续<code>0.3.2</code>版本发布了, 那么可以直接使用<code>0.3.2</code>
版本的插件, 不需要再手动添加<code>reflect-config.json</code>文件了.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-1">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>resources</code>下的<code>META-INF/native-image</code>下的名为<code>reflect-config.json</code>的文件中增加如下内容</p>
<div class="language-json codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-json codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">[</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.dialect.DialectLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.metamodel.mapping.MappingModelCreationLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.engine.jdbc.env.internal.LobCreationLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.boot.jaxb.JaxbLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.cache.spi.SecondLevelCacheLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.engine.jdbc.JdbcLogging_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.resource.beans.internal.BeansMessageLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"name": "org.hibernate.sql.results.graph.embeddable.EmbeddableLoadingLogger_$logger",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		"methods": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"name": "&lt;init&gt;",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				"parameterTypes": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					"org.jboss.logging.Logger"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">			}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h3>
<ul>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/pull/286" target="_blank" rel="noopener noreferrer">Fix compatibility with Hibernate 6.2.2</a></li>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/issues/297" target="_blank" rel="noopener noreferrer">Missing logger reflection entries for Hibernate 6.2</a></li>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata/commit/afb9a1ee44e0a18b9cd31f04e038caea32d308a3" target="_blank" rel="noopener noreferrer">Add missing logger metadata for Hibernate 6.2</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>上面是我目前升级到<code>spring-boot-3.1.0</code>后遇到的问题, 总的来说这些问题都是因为框架内部的一些集成问题导致的.<br>
目前<code>graalvm</code>的<code>native-image</code>插件还不是很完善, 有些问题还需要我们自己去解决, 但是相信随着<code>graalvm</code>的发展, 这些问题都会逐渐解决的.
<code>oracle</code>维护了一个<code>graalvm</code>的<code>reachability-metadata</code>的项目, 用来解决一些框架集成的问题, 我们可以在这个项目中查看到一些框架的集成问题的解决方案.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料-1">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/06/01/upgrading-to-spring-boot-3.1.0-native-image-startup-errors-and-solutions#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99-1" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/oracle/graalvm-reachability-metadata" target="_blank" rel="noopener noreferrer">graalvm-reachability-metadata</a></li>
</ul>]]></content:encoded>
            <category>troubleshooting</category>
            <category>spring-boot</category>
            <category>spring-framework</category>
            <category>native-image</category>
        </item>
        <item>
            <title><![CDATA[基于hibernate的spring-data-jpa的并发性能优化配置]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios</guid>
            <pubDate>Fri, 26 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[摘要]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="摘要">摘要<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E6%91%98%E8%A6%81" class="hash-link" aria-label="摘要的直接链接" title="摘要的直接链接">​</a></h2>
<p>默认情况下，<code>spring-data-jpa</code>使用<code>hibernate</code>作为<code>jpa</code>的实现, 当并发量较大时, 由于框架的一些默认配置可能会引发性能瓶颈,
下面将介绍一些常见的配置项来改善并发量较大时的性能问题.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="禁用open-in-view">禁用<code>open-in-view</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E7%A6%81%E7%94%A8open-in-view" class="hash-link" aria-label="禁用open-in-view的直接链接" title="禁用open-in-view的直接链接">​</a></h2>
<p>在<code>spring-boot</code>中默认开启了<code>open-in-view</code>，这个配置项的作用是在整个请求上下文复用同一个<code>EntityManager</code>.<br>
该实现的好处是避免在同一个请求中多次创建一个<code>EntityManager</code>, 从而提高性能.<br>
当系统并发较大时且系统相应较慢, 由于<code>EntityManager</code>会持有数据库链接直到整个请求处理完成, 如果没有特别的需求, 例如:</p>
<ul>
<li>在<code>View</code>层使用Entity对象中<code>cascade</code>为<code>lazy</code>的关联对象</li>
</ul>
<p>可以考虑禁用<code>open-in-view</code>来提高性能</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>application.yml</code>中添加如下配置:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">open-in-view</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="覆盖hibernateconnectionhandling_mode配置项的默认配置">覆盖<code>hibernate.connection.handling_mode</code>配置项的默认配置<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A6%86%E7%9B%96hibernateconnectionhandling_mode%E9%85%8D%E7%BD%AE%E9%A1%B9%E7%9A%84%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE" class="hash-link" aria-label="覆盖hibernateconnectionhandling_mode配置项的默认配置的直接链接" title="覆盖hibernateconnectionhandling_mode配置项的默认配置的直接链接">​</a></h2>
<p><code>hibernate.connection.handling_mode</code>用于配置<code>EntityManager</code>中关联的数据库连接(创建及销毁时机)的控制.<br>
默认值创建时机为第一次与数据库交互, 关闭时机为<code>EntitiyManager</code>被关闭, 此举的目的是为了确保数据连接的最大化利用(
因为数据库连接的创建通常比较昂贵).<br>
但是对于带用<code>DataSource</code>的应用来说, 此配置并不会改善性能问题, 因为<code>DataSource</code>存在的意义就是复用数据库连接.<br>
并且由于<code>EntityManager</code>关联的数据库连接只有在关闭时才会被释放, 如果遇到<code>EntityManager</code>
长时间存活时并且此时系统并发较大会导致数据库没有空闲的连接导致后续请求被堵塞甚至获取数据库连接超时.<br></p>
<p>为了解决这个问题, 可以考虑配置<code>hibernate.connection.handling_mode</code>配置项对应的值,
该配置对应的枚举类为<code>PhysicalConnectionHandlingMode</code>, 枚举类中有如下几个值</p>
<p>对于没有使用<code>DataSource</code>的应用来说, 可以考虑以下几个值, 这几个值都是为了确保数据库连接的最大化利用, 因为创建数据库连接比较昂贵.</p>
<ul>
<li>IMMEDIATE_ACQUISITION_AND_HOLD
<br>表示连接会在<code>EntityManager</code>创建时获取, 关闭时释放.
<br>该配置的目的是为了能够在整个请求上下文中复用同一个数据库连接, 因为创建数据库连接比较昂贵.
但是对于带用<code>DataSource</code>的应用来说, 此配置并不会改善性能问题, 因为<code>DataSource</code>存在的意义就是复用数据库连接.</li>
<li>DELAYED_ACQUISITION_AND_HOLD<br>
<br>表示连接会<code>EntityManager</code>和数据库产生交互时获取, 关闭时释放. 这是默认的配置.
<br>此配置和上面的配置除了获取连接的时机不同外, 其他都相同.</li>
</ul>
<p>对于使用<code>DataSource</code>的应用来说, 可以积极地释放数据库链接来提高系统吞吐率, 因为<code>DataSource</code>已经帮我们做了数据库连接的复用,</p>
<ul>
<li>DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT
<br>如果需要执行多个独立的语句，那么可以选择此配置</li>
<li>DELAYED_ACQUISITION_AND_RELEASE_BEFORE_TRANSACTION_COMPLETION
<br>如果应用程序需要执行多个事务，并且不在乎事务的一致性，那么可以选择此配置.<br>
<br>这个配置一个潜在的问题是由于事务提交前会释放数据库连接, 如果后续事务提交时需要获取数据库连接时出现了问题会导致事务提交失败,
从而导致数据库中的事务一直处于开启状态</li>
<li>DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION
<br>如果需要处理事务, 并且为了保证事务的一致性, 那么可以选择此配置</li>
</ul>
<p>一般来说, 如果应用程序需要处理事务, 并且为了保证事务的一致性,
那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_AFTER_TRANSACTION</code>配置.
如果应用不在乎事务的一致性, 那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_BEFORE_TRANSACTION_COMPLETION</code>配置,
由于此配置会在事务提交前释放数据库连接,有可能会导致后续事务提交时获取数据库连接失败, 从而导致事务提交失败,
从而导致数据库中的事务一直处于开启状态, 所以此配置需要谨慎使用.
如果应用不需要处理事务, 那么可以选择<code>DELAYED_ACQUISITION_AND_RELEASE_AFTER_STATEMENT</code>配置.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案-1">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88-1" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h3>
<p>在<code>application.yml</code>中添加如下配置:</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">properties</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">hibernate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">connection</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">handling_mode</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> your_handling_mode</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="open-in-view">Open In View<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#open-in-view" class="hash-link" aria-label="Open In View的直接链接" title="Open In View的直接链接">​</a></h3>
<ul>
<li><a href="https://www.baeldung.com/spring-open-session-in-view" target="_blank" rel="noopener noreferrer">A Guide to Spring’s Open Session in View</a></li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/orm/jpa/support/OpenEntityManagerInViewInterceptor.html" target="_blank" rel="noopener noreferrer">OpenEntityManagerInViewInterceptor</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="connection-control">Connection Control<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#connection-control" class="hash-link" aria-label="Connection Control的直接链接" title="Connection Control的直接链接">​</a></h3>
<ul>
<li><a href="https://vladmihalcea.com/hibernate-aggressive-connection-release/" target="_blank" rel="noopener noreferrer">How does aggressive connection release work in Hibernate</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#database-connection-handling" target="_blank" rel="noopener noreferrer">Connection handling</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/resource/jdbc/spi/PhysicalConnectionHandlingMode.html" target="_blank" rel="noopener noreferrer">PhysicalConnectionHandlingMode</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/javadocs/org/hibernate/cfg/AvailableSettings.html" target="_blank" rel="noopener noreferrer">AvailableSettings</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="additional-high-performance-optimizations">Additional High-Performance Optimizations<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/26/performance-optimization-strategies-for-hibernate-in-concurrent-scenarios#additional-high-performance-optimizations" class="hash-link" aria-label="Additional High-Performance Optimizations的直接链接" title="Additional High-Performance Optimizations的直接链接">​</a></h3>
<ul>
<li><a href="https://vladmihalcea.com/tutorials/hibernate/" target="_blank" rel="noopener noreferrer">High-Performance Hibernate Tutorial</a></li>
<li><a href="https://docs.jboss.org/hibernate/orm/6.2/userguide/html_single/Hibernate_User_Guide.html#best-practices" target="_blank" rel="noopener noreferrer">Performance Tuning and Best Practices</a></li>
</ul>]]></content:encoded>
            <category>spring-boot</category>
            <category>spring-data-jpa</category>
            <category>hibernate</category>
            <category>performance</category>
        </item>
        <item>
            <title><![CDATA[解决无法输入中文字符到vscode]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode</guid>
            <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[当通过snap安装vscode后，无法输入中文字符，解决方案是在官网下载deb包安装，这样就可以输入中文字符了.]]></description>
            <content:encoded><![CDATA[<p>当通过<code>snap</code>安装<code>vscode</code>后，无法输入中文字符，解决方案是在<a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreferrer">官网</a>下载<code>deb</code>包安装，这样就可以输入中文字符了.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/solve-unable-to-input-chinese-character-into-vscode#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://github.com/microsoft/vscode/issues/96041" target="_blank" rel="noopener noreferrer">unable to input chinese character</a></li>
</ul>]]></content:encoded>
            <category>vscode</category>
            <category>snap</category>
            <category>deb</category>
        </item>
        <item>
            <title><![CDATA[通过关闭OpenEntityManagerInViewInterceptor确保当下游服务响应缓慢时不会导致数据库连接被占用完]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview</guid>
            <pubDate>Mon, 15 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[OpenEntityManagerInViewInterceptor是spring中的一个拦截器，它的作用是在整个请求上下文复用同一个EntityManager]]></description>
            <content:encoded><![CDATA[<p><code>OpenEntityManagerInViewInterceptor</code>是<code>spring</code>中的一个拦截器，它的作用是在整个请求上下文复用同一个<code>EntityManager</code>
，从而避免在一个请求中多次创建一个<code>EntityManager</code>, 从而提高性能.<br>
但是如果在一个请求的处理代码中请求了下游服务，而下游服务响应缓慢，那么在下游服务响应之前，<code>EntityManager</code>
会一直被占用，直到整个请求处理完成，这样会导致当服务并发请求量较大时，数据库连接被占用完.<br>
为了避免这种情况，可以通过关闭<code>OpenEntityManagerInViewInterceptor</code>来确保当下游服务响应缓慢时不会导致数据库连接被占用完.
下面将介绍如何关闭<code>OpenEntityManagerInViewInterceptor</code>.<br></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="解决方案">解决方案<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" class="hash-link" aria-label="解决方案的直接链接" title="解决方案的直接链接">​</a></h2>
<p>在<code>spring-boot</code>中，可以通过配置<code>spring.jpa.open-in-view</code>为<code>false</code>来关闭<code>OpenEntityManagerInViewInterceptor</code>，示例如下</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">application.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">spring</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">jpa</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">open-in-view</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean important" style="color:#36acaa">false</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="备注">备注<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E5%A4%87%E6%B3%A8" class="hash-link" aria-label="备注的直接链接" title="备注的直接链接">​</a></h2>
<ul>
<li>
<p><code>org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor</code>在请求开始时会创建一个<code>EntityManager</code>
并调用<code>org.springframework.transaction.support.TransactionSynchronizationManager.bindResource</code>
方法来绑定<code>EntityManager</code>到当前线程</p>
</li>
<li>
<p>后续框架内部的调用例如<code>Repository.findAll()</code>的大致调用链路如下</p>
<ul>
<li>Repository.findAll()</li>
<li>org.springframework.orm.jpa.SharedEntityManagerCreator.SharedEntityManagerInvocationHandler.invoke</li>
<li>org.springframework.orm.jpa.EntityManagerFactoryUtils.doGetTransactionalEntityManager</li>
<li>org.springframework.transaction.support.TransactionSynchronizationManager.getResource
<br>因为在请求开始时已经将<code>EntityManager</code>绑定到当前线程，所以这里会获取到之前创建的<code>EntityManager</code></li>
</ul>
</li>
<li>
<p>后续执行<code>query</code>时会从<code>DataSource</code>中获取一个数据库连接，然后执行查询，查询完成后，数据库连接不会立即关闭，
而是在<code>EntityManager</code>被关闭时关闭，而<code>EntityManager</code>会在<code>OpenEntityManagerInViewInterceptor</code>被关闭时关闭.</p>
</li>
</ul>
<p>综上所述，当<code>OpenEntityManagerInViewInterceptor</code>被关闭时，<code>EntityManager</code>会被关闭，而<code>EntityManager</code>
被关闭时其对应的数据库连接也会被关闭.<br>
<code>EntityManager</code>被创建出来时不会立即创建数据库连接，而是在执行<code>sql</code>时才会创建数据库连接.<br>
如果整个请求链路非常耗时，那么在整个请求链路中，<code>EntityManager</code>对应的数据库连接都会被占用，直到整个请求链路执行完成.<br>
如果同时有多个请求正在执行, 那么会导致数据库连接被占用完. 从而导致后续请求无法获取数据库连接.<br>
为了避免这种情况，可以通过关闭<code>OpenEntityManagerInViewInterceptor</code>来确保当下游服务响应缓慢时不会导致数据库连接被占用完.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/15/to-ensure-that-database-connections-are-not-exhausted-when-downstream-services-respond-slowly-by-closing-open-session-inview#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/71140137/when-does-jpa-return-connection-to-db-pool" target="_blank" rel="noopener noreferrer">When does JPA return connection to db pool</a></li>
<li><a href="https://www.baeldung.com/spring-open-session-in-view" target="_blank" rel="noopener noreferrer">A Guide to Spring’s Open Session in View</a></li>
</ul>]]></content:encoded>
            <category>spring-boot</category>
            <category>spring-data-jpa</category>
        </item>
        <item>
            <title><![CDATA[通过创建rsa格式的私钥以及服务端启用rsa认证解决jsch连接ssh失败的问题]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server</guid>
            <pubDate>Fri, 05 May 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[服务建立ssh连接失败, 问题定位为jsch不支持openssh格式的私钥.]]></description>
            <content:encoded><![CDATA[<p>服务建立<code>ssh</code>连接失败, 问题定位为<code>jsch</code>不支持<code>openssh</code>格式的私钥.<br>
在<code>OpenSSH 7.8</code>及之后的版本, <code>ssh-keygen</code>命令默认生成的私钥格式为<code>openssh</code>.<br>
该格式的头部为<code>-----BEGIN OPENSSH PRIVATE KEY-----</code>.<br></p>
<p>在将私钥转换为<code>rsa</code>格式后, 发现服务端还需要启用<code>rsa</code>认证, 在启用<code>rsa</code>认证后问题解决.<br></p>
<p>下面将详细介绍如何生成<code>rsa</code>格式的私钥以及服务端启用<code>rsa</code>认证.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="生成rsa格式的私钥">生成rsa格式的私钥<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E7%94%9F%E6%88%90rsa%E6%A0%BC%E5%BC%8F%E7%9A%84%E7%A7%81%E9%92%A5" class="hash-link" aria-label="生成rsa格式的私钥的直接链接" title="生成rsa格式的私钥的直接链接">​</a></h2>
<p>服务建立<code>ssh</code>链接失败, 日志如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Caused by: com.jcraft.jsch.JSchException: invalid privatekey: [B@e4487af</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.KeyPair.load(KeyPair.java:664)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.KeyPair.load(KeyPair.java:561)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.JSch.addIdentity(JSch.java:407)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    at com.jcraft.jsch.JSch.addIdentity(JSch.java:367)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>在查阅了相关问题后, 发现<code>jsch</code>不支持<code>openssh</code>格式的私钥, 需要将私钥转换为<code>rsa</code>格式.<br></p>
<p>通过以下命令生成<code>rsa</code>格式的私钥</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">ssh-keygen -t rsa -b 4096 -m PEM</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>后续会提示输入私钥的文件名, 以及私钥的密码, 一般直接回车即可.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="服务端启用rsa认证">服务端启用rsa认证<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%90%AF%E7%94%A8rsa%E8%AE%A4%E8%AF%81" class="hash-link" aria-label="服务端启用rsa认证的直接链接" title="服务端启用rsa认证的直接链接">​</a></h2>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>备注</div><div class="admonitionContent_BuS1"><p><code>OpenSSH 8.8</code>及之后的版本默认禁用rsa认证, 需要手动启用, 可以通过<code>ssh -V</code>查看<code>sshd</code>版本</p></div></div>
<p>在生成了<code>rsa</code>格式的私钥后, 通过<code>ssh</code>连接服务端, 发现连接失败, 查看<code>sshd</code>日志发现如下错误</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">journalctl -t sshd -f</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>该命令输出如下内容</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: userauth_pubkey: signature algorithm ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: error: Received disconnect from 127.0.0.1 port 55904:3: com.jcraft.jsch.JSchException: Auth fail [preauth]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">May 05 18:05:00 orange sshd[289365]: Disconnected from authenticating user fastone 127.0.0.1 port 55904 [preauth]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上述日志中的<code>signature algorithm ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]</code>说明<code>sshd</code>不支持<code>ssh-rsa</code>算法.<br></p>
<p>为了解决这个问题, 我们需要编辑<code>/etc/ssh/sshd_config</code>并增加以下内容</p>
<div class="language-properties codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">/etc/ssh/sshd_config</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-properties codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">PubkeyAcceptedAlgorithms +ssh-rsa</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>编辑完成后重启<code>sshd</code>服务</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">sudo systemctl restart sshd</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/05/05/solve-jsch-ssh-connection-failure-by-creating-rsa-private-key-and-enabling-rsa-authentication-on-server#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://stackoverflow.com/questions/53134212/invalid-privatekey-when-using-jsch" target="_blank" rel="noopener noreferrer">"Invalid privatekey" when using JSch</a></li>
<li><a href="https://www.matez.de/index.php/2020/10/16/support-for-openssh-default-key-format-in-jsch-fork/#:~:text=If%20you%20are%20a%20user,them%20to%20old%20pem%20format.&amp;text=Please%20upgrade%20to%20version%200.1,and%20give%20it%20a%20try." target="_blank" rel="noopener noreferrer">support for openssh default key format in jsch fork</a></li>
<li><a href="https://unix.stackexchange.com/questions/721606/ssh-server-gives-userauth-pubkey-key-type-ssh-rsa-not-in-pubkeyacceptedalgorit" target="_blank" rel="noopener noreferrer">SSH server gives "userauth_pubkey: key type ssh-rsa not in PubkeyAcceptedAlgorithms [preauth]" when connecting with Putty</a></li>
<li><a href="https://github.com/mwiede/jsch" target="_blank" rel="noopener noreferrer">第三方基于jsch fork出来的库</a></li>
<li><a href="https://stackoverflow.com/questions/54994641/openssh-private-key-to-rsa-private-key" target="_blank" rel="noopener noreferrer">Openssh Private Key to RSA Private Key</a></li>
<li><a href="https://wiki.archlinux.org/title/SSH_keys" target="_blank" rel="noopener noreferrer">SSH keys</a></li>
</ul>]]></content:encoded>
            <category>jsch</category>
            <category>openssh</category>
            <category>sshd</category>
            <category>ssh-keygen</category>
            <category>rsa</category>
        </item>
        <item>
            <title><![CDATA[使用kind创建一个k8s集群]]></title>
            <link>https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster</link>
            <guid>https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster</guid>
            <pubDate>Sun, 23 Apr 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[kind是一个用于创建k8s集群的工具, 它使用docker容器作为节点, 可以快速创建一个k8s集群,]]></description>
            <content:encoded><![CDATA[<p>kind是一个用于创建<code>k8s</code>集群的工具, 它使用<code>docker</code>容器作为节点, 可以快速创建一个<code>k8s</code>集群,
用于测试或者开发.<br>
官方提供了相应的文档<a href="https://kind.sigs.k8s.io/docs/user/ingress/" target="_blank" rel="noopener noreferrer">Ingress</a>, 在使用该文档的时候出现了一些问题.<br>
本文基于官方文档并作出了一定的修改介绍如何使用<code>kind</code>创建一个<code>k8s</code>集群, 并在集群中部署<code>kong-ingress</code>.最后部署一个测试应用并通过
<code>kong-ingress</code>访问该应用.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装kind">安装kind<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%89%E8%A3%85kind" class="hash-link" aria-label="安装kind的直接链接" title="安装kind的直接链接">​</a></h2>
<p>执行以下命令安装<code>kind</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">go install sigs.k8s.io/kind@v0.18.0</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建一个k8s集群">创建一个k8s集群<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAk8s%E9%9B%86%E7%BE%A4" class="hash-link" aria-label="创建一个k8s集群的直接链接" title="创建一个k8s集群的直接链接">​</a></h2>
<p>执行以下命令创建一个<code>k8s</code>集群, 集群中包含一个<code>master</code>节和一个<code>worker</code>节点.<br>
同时将<code>master</code>节点的<code>80&amp;443</code>端口映射到宿主机的<code>80&amp;443</code>端口, 用于后续将<code>ingress</code>映射到宿主机的<code>80&amp;443</code>端口.<br></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">cat &lt;&lt;EOF | kind create cluster --config=-</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind: Cluster</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">apiVersion: kind.x-k8s.io/v1alpha4</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">nodes:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - role: control-plane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    kubeadmConfigPatches:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        kind: InitConfiguration</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        nodeRegistration:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          kubeletExtraArgs:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            node-labels: "ingress-ready=true"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    extraPortMappings:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - containerPort: 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hostPort: 80</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        protocol: TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      - containerPort: 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        hostPort: 443</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        protocol: TCP</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  - role: worker</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">EOF</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>执行<code>docker ps</code>命令查看<code>kind</code>创建的<code>docker</code>容器</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">CONTAINER ID   IMAGE                               COMMAND                  CREATED       STATUS       PORTS                                                                 NAMES</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">b4368e7fbfb1   kindest/node:v1.26.3                "/usr/local/bin/entr…"   2 hours ago   Up 2 hours   0.0.0.0:80-&gt;80/tcp, 0.0.0.0:443-&gt;443/tcp, 127.0.0.1:45145-&gt;6443/tcp   kind-control-plane</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">c0638805438a   kindest/node:v1.26.3                "/usr/local/bin/entr…"   2 hours ago   Up 2 hours                                                                         kind-worker</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="安装kong">安装<code>kong</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%89%E8%A3%85kong" class="hash-link" aria-label="安装kong的直接链接" title="安装kong的直接链接">​</a></h2>
<p>执行以下命令安装<code>kong-ingress</code></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f https://raw.githubusercontent.com/Kong/kubernetes-ingress-controller/main/deploy/single/all-in-one-dbless.yaml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="配置kong">配置<code>kong</code><a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E9%85%8D%E7%BD%AEkong" class="hash-link" aria-label="配置kong的直接链接" title="配置kong的直接链接">​</a></h2>
<p>执行以下命令配置<code>kong</code>.<br>
第一个命令用于将<code>deployment</code>为<code>proxy-kong</code>下面的<code>pod</code>的<code>replicas</code>设置为<code>1</code>同时将端口映射到<code>host</code>上(
这里的host就是<code>docker</code>容器的<code>host</code>, 同时docker容器对应的<code>port</code>又映射到了本地的端口).<br></p>
<p>第二个命令用于将<code>kong-proxy</code>的<code>service</code>的类型设置为<code>NodePort</code>, 这样就可以通过<code>host</code>的<code>port</code>访问<code>kong</code>了.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch deployment -n kong proxy-kong -p '{"spec":{"replicas":1, "template":{"spec":{"containers":[{"name":"proxy", "ports":[{"containerPort":8000,"hostPort":80,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"hostPort":443,"name":"proxy-ssl","protocol":"TCP"}]}],"nodeSelector":{"ingress-ready":"true"},"tolerations":[{"key":"node-role.kubernetes.io/control-plane","operator":"Equal","effect":"NoSchedule"},{"key":"node-role.kubernetes.io/master","operator":"Equal","effect":"NoSchedule"}]}}}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch service -n kong kong-proxy -p '{"spec":{"type":"NodePort"}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="启动测试应用">启动测试应用<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%90%AF%E5%8A%A8%E6%B5%8B%E8%AF%95%E5%BA%94%E7%94%A8" class="hash-link" aria-label="启动测试应用的直接链接" title="启动测试应用的直接链接">​</a></h2>
<p>创建如下文件用于后续执行<code>kubectl apply</code>命令</p>
<div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">usage.yml</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> /agnhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> netexec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8080"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> opsdockerimage/e2e</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">images</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">agnhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">2.26</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Default port used by the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Pod</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">labels</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">containers</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">command</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> /agnhost</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> netexec</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">-</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">http</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">port</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"8080"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">image</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> opsdockerimage/e2e</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">test</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">images</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">agnhost</span><span class="token punctuation" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">2.26</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">app</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">selector</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">app</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">ports</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic"># Default port used by the image</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">apiVersion</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> networking.k8s.io/v1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">kind</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> example</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">ingress</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">annotations</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">nginx.ingress.kubernetes.io/rewrite-target</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /$2</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">spec</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token key atrule" style="color:#00a4db">rules</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">http</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">paths</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pathType</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Prefix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /foo(/</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">$)(.</span><span class="token important">*)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">backend</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> foo</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token key atrule" style="color:#00a4db">number</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">pathType</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> Prefix</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">path</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> /bar(/</span><span class="token punctuation" style="color:#393A34">|</span><span class="token plain">$)(.</span><span class="token important">*)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">backend</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">              </span><span class="token key atrule" style="color:#00a4db">service</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> bar</span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain">service</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token key atrule" style="color:#00a4db">port</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                  </span><span class="token key atrule" style="color:#00a4db">number</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">8080</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">---</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">docker puull kind load docker-image opsdockerimage/e2e-test-images-agnhost:2.26s</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kind load docker-image opsdockerimage/e2e-test-images-agnhost:2.26</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">kubectl apply -f usage.yml</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="测试">测试<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E6%B5%8B%E8%AF%95" class="hash-link" aria-label="测试的直接链接" title="测试的直接链接">​</a></h2>
<p>执行以下命令测试</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl localhost/foo/hostname</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">curl localhost/bar/hostname</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="遇到的问题">遇到的问题<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98" class="hash-link" aria-label="遇到的问题的直接链接" title="遇到的问题的直接链接">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nginx和contour等ingress安装失败"><code>nginx</code>和<code>contour</code>等<code>ingress</code>安装失败<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#nginx%E5%92%8Ccontour%E7%AD%89ingress%E5%AE%89%E8%A3%85%E5%A4%B1%E8%B4%A5" class="hash-link" aria-label="nginx和contour等ingress安装失败的直接链接" title="nginx和contour等ingress安装失败的直接链接">​</a></h3>
<p>这个问题的原因是因为国内无法下载对应的镜像导致无法安装成功.<br>
解决方案是采用<code>kong</code>作为<code>ingress</code>.<br></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="官方文档中的关于kong的ingress的配置无法生效">官方文档中的关于<code>kong</code>的<code>ingress</code>的配置无法生效<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E4%B8%AD%E7%9A%84%E5%85%B3%E4%BA%8Ekong%E7%9A%84ingress%E7%9A%84%E9%85%8D%E7%BD%AE%E6%97%A0%E6%B3%95%E7%94%9F%E6%95%88" class="hash-link" aria-label="官方文档中的关于kong的ingress的配置无法生效的直接链接" title="官方文档中的关于kong的ingress的配置无法生效的直接链接">​</a></h3>
<p>执行官方文档中的如下命令失败</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">kubectl patch deployment -n kong ingress-kong -p '{"spec":{"template":{"spec":{"containers":[{"name":"proxy","ports":[{"containerPort":8000,"hostPort":80,"name":"proxy","protocol":"TCP"},{"containerPort":8443,"hostPort":443,"name":"proxy-ssl","protocol":"TCP"}]}],"nodeSelector":{"ingress-ready":"true"},"tolerations":[{"key":"node-role.kubernetes.io/control-plane","operator":"Equal","effect":"NoSchedule"},{"key":"node-role.kubernetes.io/master","operator":"Equal","effect":"NoSchedule"}]}}}}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>报错如下</p>
<div class="language-log codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-log codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">The Deployment "ingress-kong" is invalid: spec.template.spec.containers[0].image: Required value</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>这个问题的原因是因为<code>deployment</code>给错了, 正确的<code>deployment</code>应该是<code>proxy-kong</code>.<br></p>
<p>将命令中的<code>ingress-kong</code>替换为<code>proxy-kong</code>后, 执行成功.<br></p>
<p>对于这个问题, 我已经提交了pr, 但是还没有被合并, 可以参考<br>
<a href="https://github.com/kubernetes-sigs/kind/pull/3183" target="_blank" rel="noopener noreferrer">doc: fix wrong implementation of creation of kong-ingress #3183</a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="https://www.geek66.cyou/zh-CN/blog/2023/04/23/use-kind-create-a-k8s-cluster#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2>
<ul>
<li><a href="https://kind.sigs.k8s.io/" target="_blank" rel="noopener noreferrer">kind</a></li>
</ul>]]></content:encoded>
            <category>kind</category>
            <category>k8s</category>
            <category>docker</category>
            <category>github-pr</category>
        </item>
    </channel>
</rss>