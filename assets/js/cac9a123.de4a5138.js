"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[79084],{19380:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"software-engineering/development/programming-languages/kotlin/projects","title":"Projects","description":"Std","source":"@site/docs/software-engineering/development/programming-languages/kotlin/projects.md","sourceDirName":"software-engineering/development/programming-languages/kotlin","slug":"/software-engineering/development/programming-languages/kotlin/projects","permalink":"/docs/software-engineering/development/programming-languages/kotlin/projects","draft":false,"unlisted":false,"editUrl":"https://github.com/orange-guo/markdowns/tree/master/docs/software-engineering/development/programming-languages/kotlin/projects.md","tags":[],"version":"current","lastUpdatedBy":"Xiangcheng Kuo","lastUpdatedAt":1740990631000,"sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"softwareEngineering","previous":{"title":"Kotlin","permalink":"/docs/category/kotlin"},"next":{"title":"JetBrains Kotlin Plugin Development","permalink":"/docs/category/jetbrains-kotlin-plugin-development"}}');var r=i(74848),s=i(28453);const o={sidebar_position:0},l="Projects",a={},c=[{value:"Std",id:"std",level:2},{value:"JSON",id:"json",level:2},{value:"Map Structure",id:"map-structure",level:2},{value:"Concurrency",id:"concurrency",level:2},{value:"Awesome",id:"awesome",level:2},{value:"Samples",id:"samples",level:2},{value:"Arrow",id:"arrow",level:2},{value:"Web",id:"web",level:2},{value:"Dependency Injection",id:"dependency-injection",level:2},{value:"GUI",id:"gui",level:2},{value:"Utility",id:"utility",level:2},{value:"Test",id:"test",level:2},{value:"Logging",id:"logging",level:2},{value:"Database",id:"database",level:2},{value:"Command line",id:"command-line",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"projects",children:"Projects"})}),"\n",(0,r.jsx)(n.h2,{id:"std",children:"Std"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Kotlin/kotlinx.coroutines",children:"distrobox"}),"\n",(0,r.jsx)("br",{}),"Use any linux distribution inside your terminal. Enable both backward and forward compatibility with software and\nfreedom to use whatever distribution you\u2019re more comfortable with."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Kotlin/kotlinx-io/",children:"kotlinx-io/"}),"\n",(0,r.jsx)("br",{}),"Kotlin multiplatform I/O library"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Kotlin/kotlinx.coroutines/tree/master/kotlinx-coroutines-debug",children:"kotlinx-coroutines-debug"}),"\n",(0,r.jsx)("br",{}),"Debugging facilities for kotlinx.coroutines on JVM."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"json",children:"JSON"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/square/moshi",children:"moshi"}),"\n",(0,r.jsx)("br",{}),"A modern JSON library for Kotlin and Java."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/ansman/kotshi",children:"kotshi"}),"\n",(0,r.jsx)("br",{}),"An annotation processor that generates Moshi adapters from immutable Kotlin data classes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/ZacSweers/MoshiX",children:"MoshiX"}),"\n",(0,r.jsx)("br",{}),"Extensions for Moshi including IR plugins, moshi-sealed, and more."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"map-structure",children:"Map Structure"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mcarleio/konvert",children:"konvert"}),"\n",(0,r.jsx)("br",{}),"This kotlin compiler plugin is using KSP API and generates kotlin code to map one class to another"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"concurrency",children:"Concurrency"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Kotlin/kotlinx.coroutines",children:"kotlinx.coroutines"}),"\n",(0,r.jsx)("br",{}),"Library support for Kotlin coroutines"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"awesome",children:"Awesome"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/KotlinBy/awesome-kotlin",children:"awesome-kotlin"}),"\n",(0,r.jsx)("br",{}),"A curated list of awesome Kotlin related stuff Inspired by awesome-java."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"samples",children:"Samples"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/nomisRev/ktor-arrow-example",children:"ktor-arrow-example"}),"\n",(0,r.jsx)("br",{}),'Real World implementation - "The mother of all demo apps". Written in Kotlin, with Ktor, Arrow, SqlDelight,\nKotlinX Serialization, etc.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/cortinico/kotlin-android-template",children:"kotlin-android-template"}),"\n",(0,r.jsx)("br",{}),"Android + Kotlin + Github Actions + ktlint + Detekt + Gradle Kotlin DSL + buildSrc = \u2764\ufe0f"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"arrow",children:"Arrow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/arrow-kt/arrow",children:"arrow"}),"\n",(0,r.jsx)("br",{}),"\u039brrow - Functional companion to Kotlin's Standard Library"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Docs"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://arrow-kt.io/learn/design/suspend-io/",children:"Why suspend over IO"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://arrow-kt.io/learn/typed-errors/validation/",children:"Validation"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"web",children:"Web"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://ktor.io/",children:"ktor"}),"\n",(0,r.jsx)("br",{}),"Create asynchronous client and server applications. Anything from microservices to multiplatform HTTP client apps\nin a simple way. Open Source, free, and fun!"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"dependency-injection",children:"Dependency Injection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/InsertKoinIO/koin",children:"koin"}),"\n",(0,r.jsx)("br",{}),"Koin - a pragmatic lightweight dependency injection framework for Kotlin & Kotlin Multiplatform"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://kosi-libs.org/",children:"Kodein"}),"\n",(0,r.jsx)("br",{}),"Painless Kotlin Dependency Injection"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"gui",children:"GUI"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/JetBrains/compose-multiplatform",children:"compose-multiplatform"}),"\n",(0,r.jsx)("br",{}),"Compose Multiplatform, a modern UI framework for Kotlin that makes building performant and beautiful user\ninterfaces easy and enjoyable."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"utility",children:"Utility"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/renatoathaydes/kunion",children:"kunion"}),"\n",(0,r.jsx)("br",{}),"Union types for Kotlin"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/kopykat-kt/kopykat",children:"kopykat"}),"\n",(0,r.jsx)("br",{}),"Little utilities for more pleasant immutable data in Kotlin"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"test",children:"Test"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://kotest.io/",children:"kotest"}),"\n",(0,r.jsx)("br",{}),"Kotest is a flexible and elegant multi-platform test framework for Kotlin with extensive assertions and\nintegrated property testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://mockk.io/",children:"mockk"}),"\n",(0,r.jsx)("br",{}),"mocking library for Kotlin"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/mockito/mockito-kotlin",children:"mockito-kotlin"}),"\n",(0,r.jsx)("br",{}),"sing Mockito with Kotlin"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/oshai/kotlin-logging",children:"kotlin-logging"}),"\n",(0,r.jsx)("br",{}),"Lightweight Multiplatform logging framework for Kotlin. A convenient and performant logging facade."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"database",children:"Database"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/ctripcorp/SQLlin",children:"SQLlin"}),"\n",(0,r.jsx)("br",{}),"A DSL SQLite library for Kotlin Multiplatform."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.ktorm.org/",children:"ktorm"}),"\n",(0,r.jsx)("br",{}),"Ktorm is a lightweight and efficient ORM Framework for Kotlin directly based on pure JDBC. It provides\nstrong-typed and flexible SQL DSL and convenient sequence APIs to reduce our duplicated effort on database operations.\nAll the SQL statements, of course, are generated automatically."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/JetBrains/Exposed",children:"exposed"}),"\n",(0,r.jsx)("br",{}),"Kotlin SQL Framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://cashapp.github.io/sqldelightSQLDelight",children:"sqldelight"}),"\n",(0,r.jsx)("br",{}),"SQLDelight generates typesafe kotlin APIs from your SQL statements. It verifies your schema, statements, and\nmigrations at compile-time and provides IDE features like autocomplete and refactoring which make writing and\nmaintaining SQL simple"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"command-line",children:"Command line"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/ajalt/clikt",children:"clikt"}),"\n",(0,r.jsx)("br",{}),"Multiplatform command line interface parsing for Kotlin"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Kotlin/kotlinx-cli",children:"kotlinx-cli"}),"\n",(0,r.jsx)("br",{}),"Pure Kotlin implementation of a generic CLI parser."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/xenomachina/kotlin-argparser",children:"kotlin-argparser"}),"\n",(0,r.jsx)("br",{}),"Easy to use and concise yet powerful and robust command line argument parsing for Kotlin"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(96540);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);