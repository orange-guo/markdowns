"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[78546],{24180:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"software-engineering/architecture/architecture-design/ha","title":"HA","description":"Projects","source":"@site/docs/software-engineering/architecture/architecture-design/ha.md","sourceDirName":"software-engineering/architecture/architecture-design","slug":"/software-engineering/architecture/architecture-design/ha","permalink":"/docs/software-engineering/architecture/architecture-design/ha","draft":false,"unlisted":false,"editUrl":"https://github.com/orange-guo/markdowns/tree/master/docs/software-engineering/architecture/architecture-design/ha.md","tags":[],"version":"current","lastUpdatedBy":"Xiangcheng Kuo","lastUpdatedAt":1752630141000,"frontMatter":{},"sidebar":"softwareEngineering","previous":{"title":"Architecture Design","permalink":"/docs/category/architecture-design"},"next":{"title":"Development","permalink":"/docs/category/development"}}');var s=n(74848),i=n(28453);const a={},c="HA",o={},l=[{value:"Projects",id:"projects",level:2},{value:"Load Balancer",id:"load-balancer",level:3},{value:"Network",id:"network",level:3},{value:"Consistency",id:"consistency",level:3},{value:"DB Proxy",id:"db-proxy",level:3},{value:"DB",id:"db",level:3},{value:"Failover",id:"failover",level:3}];function d(e){const r={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"ha",children:"HA"})}),"\n",(0,s.jsx)(r.h2,{id:"projects",children:"Projects"}),"\n",(0,s.jsx)(r.h3,{id:"load-balancer",children:"Load Balancer"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/haproxy/haproxy",children:"haproxy"}),"\n",(0,s.jsx)("br",{}),"HAProxy Load Balancer's development branch (mirror of git.haproxy.org)"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"network",children:"Network"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/acassen/keepalived",children:"keepalived"}),"\n",(0,s.jsx)("br",{}),"Keepalived"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"consistency",children:"Consistency"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/apache/zookeeper",children:"zookeeper"}),"\n",(0,s.jsx)("br",{}),"Apache ZooKeeper"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/hashicorp/consul",children:"consul"}),"\n",(0,s.jsx)("br",{}),"Consul is a distributed, highly available, and data center aware solution to connect and configure applications\nacross dynamic, distributed infrastructure."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/etcd-io/etcd",children:"etcd"}),"\n",(0,s.jsx)("br",{}),"Distributed reliable key-value store for the most critical data of a distributed system"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"db-proxy",children:"DB Proxy"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/mariadb-corporation/MaxScale",children:"MaxScale"}),"\n",(0,s.jsx)("br",{}),"An intelligent database proxy."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/patroni/patroni",children:"patroni"}),"\n",(0,s.jsx)("br",{}),"A template for PostgreSQL High Availability with Etcd, Consul, ZooKeeper, or Kubernetes"]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"db",children:"DB"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/redis/redis",children:"redis"}),"\n",(0,s.jsx)("br",{}),"Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of\nvalues are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"failover",children:"Failover"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/ClusterLabs/pacemaker",children:"pacemaker"}),"\n",(0,s.jsx)("br",{}),"Pacemaker is an advanced, scalable High-Availability cluster resource manager"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"https://github.com/corosync/corosync",children:"corosync"}),"\n",(0,s.jsx)("br",{}),"The Corosync Cluster Engine"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var t=n(96540);const s={},i=t.createContext(s);function a(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);