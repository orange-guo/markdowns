"use strict";(self.webpackChunkmarkdowns=self.webpackChunkmarkdowns||[]).push([[19611],{73320:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"software-engineering/ops/databases/projects","title":"Database","description":"- rocksdb","source":"@site/docs/software-engineering/ops/databases/projects.md","sourceDirName":"software-engineering/ops/databases","slug":"/software-engineering/ops/databases/projects","permalink":"/docs/software-engineering/ops/databases/projects","draft":false,"unlisted":false,"editUrl":"https://github.com/orange-guo/markdowns/tree/master/docs/software-engineering/ops/databases/projects.md","tags":[],"version":"current","lastUpdatedBy":"Xiangcheng Kuo","lastUpdatedAt":1741938883000,"frontMatter":{},"sidebar":"softwareEngineering","previous":{"title":"Postgres","permalink":"/docs/software-engineering/ops/databases/postgres"},"next":{"title":"Desktop","permalink":"/docs/category/desktop"}}');var a=t(74848),n=t(28453);const i={},o="Database",c={},d=[];function l(e){const s={a:"a",h1:"h1",header:"header",li:"li",ul:"ul",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"database",children:"Database"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://rocksdb.org/",children:"rocksdb"}),"\n",(0,a.jsx)("br",{}),"A persistent key-value store for fast storage environments"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/apache/cassandra",children:"cassandra"}),"\n",(0,a.jsx)("br",{}),"Mirror of Apache Cassandra"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/facebook/rocksdb",children:"rocksdb"}),"\n",(0,a.jsx)("br",{}),"A library that provides an embeddable, persistent key-value store for fast storage."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/pingcap/tidb",children:"tidb"}),"\n",(0,a.jsx)("br",{}),"TiDB is an open-source, cloud-native, distributed, MySQL-Compatible database for elastic scale and real-time\nanalytics. Try AI-powered Chat2Query free at : ",(0,a.jsx)(s.a,{href:"https://tidbcloud.com/free-trial",children:"https://tidbcloud.com/free-trial"})]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/tikv/tikv",children:"tikv"}),"\n",(0,a.jsx)("br",{}),"Distributed transactional key-value database, originally created to complement TiDB"]}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://github.com/postgres/postgres",children:"postgres"})}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/liquibase/liquibase",children:"liquibase"}),"\n",(0,a.jsx)("br",{}),"Main Liquibase Source"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/supabase/supabase",children:"supabase"}),"\n",(0,a.jsx)("br",{}),"The open source Firebase alternative."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/hashicorp/consul",children:"consul"}),"\n",(0,a.jsx)("br",{}),"Consul is a distributed, highly available, and data center aware solution to connect and configure applications\nacross dynamic, distributed infrastructure."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/etcd-io/etcd",children:"etcd"}),"\n",(0,a.jsx)("br",{}),"Distributed reliable key-value store for the most critical data of a distributed system"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.a,{href:"https://github.com/redis/redis",children:"redis"}),"\n",(0,a.jsx)("br",{}),"Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of\nvalues are supported: Strings, Lists, Sets, Sorted Sets, Hashes, Streams, HyperLogLogs, Bitmaps."]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>o});var r=t(96540);const a={},n=r.createContext(a);function i(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);